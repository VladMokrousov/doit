{"version":3,"sources":["components/page-title/index.tsx","components/page-title/page-title.tsx","pages/main-page.tsx","pages/todos-page/components/search-panel/index.tsx","pages/todos-page/components/search-panel/search-panel.tsx","pages/todos-page/components/todo-item-content/index.tsx","pages/todos-page/components/todo-item-content/todo-item-content.tsx","pages/todos-page/components/todos-table/index.tsx","pages/todos-page/components/todos-table/todos-table.tsx","pages/todos-page/components/status-filter/index.tsx","pages/todos-page/components/status-filter/status-filter.tsx","components/portal/index.tsx","components/portal/portal.tsx","context/AppContext.tsx","context/TooltipContext.tsx","pages/todos-page/components/todos-modal-content/index.tsx","pages/todos-page/components/todos-modal-content/todos-modal-content.tsx","components/modal/index.tsx","components/modal/modal.tsx","pages/todos-page/index.tsx","pages/notes-page/components/note-item-content/index.tsx","pages/notes-page/components/note-item-content/note-item-content.tsx","pages/notes-page/components/notes-list/index.tsx","pages/notes-page/components/notes-list/notes-list.tsx","pages/notes-page/components/notes-modal-content/index.tsx","pages/notes-page/components/notes-modal-content/notes-modal-content.tsx","pages/notes-page/index.tsx","pages/settings-page/components/change-email-modal-content/index.tsx","pages/settings-page/components/change-email-modal-content/change-email-modal-content.tsx","pages/settings-page/components/change-password-modal-content/index.tsx","pages/settings-page/components/change-password-modal-content/change-password-modal-content.tsx","pages/settings-page/components/delete-account-modal-content/index.tsx","pages/settings-page/components/delete-account-modal-content/delete-account-modal-content.tsx","pages/settings-page/index.tsx","pages/sign-up-page/components/sign-up-modal-content/index.tsx","pages/sign-up-page/components/sign-up-modal-content/sign-up-modal-content.tsx","pages/sign-up-page/index.tsx","pages/sign-in-page/components/sign-in-modal-content/index.tsx","pages/sign-in-page/components/sign-in-modal-content/sign-in-modal-content.tsx","pages/sign-in-page/index.tsx","pages/reset-password-page/components/reset-password-modal-content.tsx","pages/reset-password-page/index.tsx","components/header/index.tsx","components/header/header.tsx","components/tooltip/index.tsx","components/tooltip/tooltip.tsx","app/index.tsx","app/app.tsx","index.tsx"],"names":["PageTitle","text","className","MainPage","SearchPanel","onSearchChange","useState","term","setTerm","type","placeholder","value","onChange","evt","changedTerm","target","TodoItemContent","fieldsContent","onDeleted","description","status","priority","endDatePlan","endDateActual","classNames","onClick","TodosTable","todos","onSelected","overlayText","tableHeaders","map","item","additionalClass","clazz","scope","tableRows","id","itemProps","importantClass","doneClass","onDoubleClick","StatusFilter","filter","onFilterChange","everyStatusCount","buttonsParams","name","label","forEach","count","buttons","Portal","children","el","document","createElement","classList","add","useEffect","body","style","overflow","modalHtml","querySelector","append","remove","createPortal","AppContext","React","createContext","useAppContext","useContext","AppProvider","isLoggedIn","setLoggedIn","currentUser","setCurrentUser","isUserGet","setUserGet","actionCodeSettings","url","firebase","auth","onAuthStateChanged","user","emailVerified","sendEmailVerification","catch","err","console","log","message","localStorage","getItem","onLogIn","lastSignInTime","Date","metadata","Math","round","getTime","signOut","error","onLogOut","Provider","TooltipContext","useTooltipContext","TooltipProvider","isOpen","setIsOpen","setMessage","showTooltip","hideTooltip","TodosModalContent","selectedItemId","onEdited","onAdded","onToggleModal","currentDate","currentMonth","getMonth","currentDay","getDate","formattedDate","getFullYear","String","length","state","setState","database","ref","uid","once","then","snapshot","childSnapshot","childData","val","onSubmit","preventDefault","htmlFor","prevState","required","disabled","Modal","classes","title","onCloseBtnClick","TodosPage","showModal","isDataLoaded","getTodos","elem","restParams","todosData","todosRef","on","off","newItemId","addItem","newItem","createTodoItem","push","e","toggleModal","textContent","lastItemId","Object","values","visibleItems","items","filterItem","toLowerCase","indexOf","search","all","new","inProgress","done","key","set","NoteItemContent","creationDate","NotesList","notes","itemsList","NotesModalContent","setDescription","NotesPage","getNotes","notesData","notesRef","getCurrentFormattedDate","createNoteItem","ChangeEmailModalContent","oldEmail","email","password","credentials","setCredentials","setEmail","isFirstModal","setIsFirstModal","onCredentialsChange","credential","EmailAuthProvider","reauthenticateWithCredential","verifyBeforeUpdateEmail","ChangePasswordModalContent","oldPassword","setPassword","updatePassword","DeleteAccountModalContent","delete","SettingsPage","displayName","setName","photoURL","photoUrl","setPhotoUrl","isNameClicked","setIsNameClicked","isAvatarClicked","setIsAvatarClicked","showModalEmailChange","setShowModalEmailChange","showModalPasswordChange","setShowModalPasswordChange","showModalAccountDelete","setShowModalAccountDelete","isGoogleUser","providerData","providerId","toggleEmailChangeModal","prev","togglePasswordChangeModal","toggleAccountDeleteModal","src","width","height","alt","updateProfile","undefined","sendPasswordResetEmail","SignUpModalContent","repeatPassword","createUserWithEmailAndPassword","setItem","to","provider","GoogleAuthProvider","signInWithPopup","SignUpPage","SignInModalContent","isRememberMeChecked","setIsRememberMeChecked","signInWithEmailAndPassword","removeItem","checked","SignInPage","ResetPasswordModalContent","ResetPasswordPage","Header","Tooltip","App","path","render","exact","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM"],"mappings":"mkBACeA,ECK6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7C,OAAO,oBAAIC,UAAU,aAAd,SAA4BD,KCItBE,EARY,kBACzB,sBAAMD,UAAU,YAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAWD,KAAK,kD,sBCLPG,G,MCMiC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EAC9CC,mBAAiB,IAD6B,mBAC/DC,EAD+D,KACzDC,EADyD,KAUtE,OACE,uBACEC,KAAK,OACLC,YAAY,qBACZR,UAAU,eACVS,MAAOJ,EACPK,SAboB,SAACC,GACvB,IAAMC,EAAcD,EAAIE,OAAOJ,MAC/BH,EAAQM,GAERT,EAAeS,QCbJE,G,MCUyC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChEC,EAA8DF,EAA9DE,YAAaC,EAAiDH,EAAjDG,OAAQC,EAAyCJ,EAAzCI,SAAUC,EAA+BL,EAA/BK,YAAaC,EAAkBN,EAAlBM,cAE9CC,EAAqB,mBAE3B,OACE,qCACE,oBAAItB,UAAWsB,EAAf,SACE,sBAAMtB,UAAU,gCAAhB,SAAiDiB,MAEnD,oBAAIjB,UAAWsB,EAAf,SACE,sBAAMtB,UAAU,2BAAhB,SAA4CkB,MAE9C,oBAAIlB,UAAWsB,EAAf,SACE,sBAAMtB,UAAU,6BAAhB,SAA8CmB,MAEhD,oBAAInB,UAAWsB,EAAf,SACE,sBAAMtB,UAAU,6BAAhB,SAA8CoB,MAEhD,oBAAIpB,UAAWsB,EAAf,SACE,sBAAMtB,UAAU,+BAAhB,SAAgDqB,MAElD,oBAAIrB,UAAWsB,EAAf,SACE,wBAAQf,KAAK,SAASP,UAAU,iCAAiCuB,QAASP,EAA1E,+DCjCOQ,G,MCa+B,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOT,EAAyC,EAAzCA,UAAWU,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAUvEC,EAT6B,CACjC,cACA,SACA,WACA,gBACA,kBACA,UAGmDC,KACnD,SAACC,GACC,IAAMC,EACI,eAARD,EACI,6BACQ,UAARA,EACA,wBACQ,YAARA,EACA,0BACQ,iBAARA,EACA,0BACQ,mBAARA,EACA,4BACQ,UAARA,EACA,wBACA,GAEAE,EAAgBD,EAAe,wBAAoBA,GAAoB,gBAE7E,OACE,oBAAe/B,UAAWgC,EAAOC,MAAM,MAAvC,SACGH,GADMA,MAMf,GAAIL,GAAST,GAAaU,EAAY,CACpC,IAAMQ,EAA2BT,EAAMI,KACrC,SAACC,GAAkC,IACzBK,EAAqBL,EAArBK,GAAOC,EADiB,YACHN,EADG,QAG1BO,EACgC,QAApCD,EAAUrB,cAAcI,SAAqB,yBAA2B,KACpEmB,EAC8B,QAAlCF,EAAUrB,cAAcG,OAAmB,oBAAsB,KAEnE,OACE,oBACElB,UAAS,sBAAiBsC,EAAjB,YAA8BD,GAEvCE,cAAe,SAAC5B,GAAD,OAASe,EAAWf,EAAKwB,IAH1C,SAKE,cAAC,EAAD,2BAAqBC,GAArB,IAAgCpB,UAAW,kBAAMA,EAAUmB,QAHtDA,MASb,OACE,wBAAOnC,UAAU,oBAAjB,UACE,gCACE,oBAAIA,UAAU,sCAAd,SAAqD4B,MAEvD,gCAAQM,OAId,OACE,qCACE,wBAAOlC,UAAU,oBAAjB,UACE,gCACE,oBAAIA,UAAU,sCAAd,SAAqD4B,MAEvD,6BAEF,+BAAOD,SCxFEa,G,MCemC,SAAC,GAI5C,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,eACAC,EACI,EADJA,iBAEMC,EAAkC,CACtC,CAAEC,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,aAAcC,MAAO,eAC7B,CAAED,KAAM,OAAQC,MAAO,SAGzBF,EAAcG,SAAQ,SAACjB,GACrBA,EAAKkB,MAAQL,EAAiBb,EAAKe,SAGrC,IAAMI,EAAyBL,EAAcf,KAC3C,YAA0C,IAAvCgB,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOE,EAAyB,EAAzBA,MAERhB,EADWS,IAAWI,EACH,6BAA+B,KACxD,OACE,wBACEtC,KAAK,SACLP,UAAS,iCAA4BgC,GAErCT,QAAS,WACPmB,EAAeG,IALnB,mBAQMC,EARN,cAQiBE,IALVH,MAUb,OAAO,qBAAK7C,UAAU,gBAAf,SAAgCiD,MCjD1BC,G,MCQuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjCC,EAAqBC,SAASC,cAAc,OAkBlD,OAjBAF,EAAGG,UAAUC,IAAI,WAEjBC,qBAAU,WACRJ,SAASK,KAAKC,MAAMC,SAAW,SAG/B,IAAMC,EAAmCR,SAASS,cAAc,UAKhE,OAJID,GACFA,EAAUE,OAAOX,GAGZ,WACLA,EAAGY,SACHX,SAASK,KAAKC,MAAMC,SAAW,aAEhC,IAEIK,uBAAad,EAAUC,K,OCpB1Bc,EAAaC,IAAMC,cAAmB,IAE/BC,EAAgB,WAC3B,OAAOC,qBAAWJ,IAIPK,EAAyC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,EACpC/C,oBAAS,GAD2B,mBAC/DoE,EAD+D,KACnDC,EADmD,OAEhCrE,oBAAS,GAFuB,mBAE/DsE,EAF+D,KAElDC,EAFkD,OAGtCvE,oBAAS,GAH6B,mBAG/DwE,EAH+D,KAGpDC,EAHoD,KAKhEC,EAAqB,CAEzBC,IAAK,yDAIPtB,qBAAU,WACRuB,IAASC,OAAOC,oBAAmB,SAACC,GAClC,GAAIA,EAMF,GALKA,EAAKC,eACRD,EAAKE,sBAAsBP,GAAoBQ,OAAM,SAACC,GACpDC,QAAQC,IAAI,sMAA4CF,EAAIG,YAG3DC,aAAaC,QAAQ,cAgBxBC,EAAQV,OAhB+B,CACvC,IAAMW,EAAiB,IAAIC,KAAKZ,EAAKa,SAASF,gBACdG,KAAKC,MAAMJ,EAAeK,UAAY,KAC3CF,KAAKC,OAAM,IAAIH,MAAOI,UAAY,KAAQ,MAGnEnB,IACGC,OACAmB,UACAd,OAAM,SAACe,GACNb,QAAQC,IAAIY,EAAMX,YAGtBG,EAAQV,QAMZmB,IAEFzB,GAAW,QAEZ,IAEH,IAAMgB,EAAU,SAACV,GACfV,GAAY,GACZE,EAAeQ,IAEXmB,EAAW,WACf7B,GAAY,GACZE,GAAe,IAGjB,OAAOC,EACL,cAACV,EAAWqC,SAAZ,CAAqB9F,MAAO,CAAE+D,aAAYE,cAAaI,sBAAvD,SACG3B,IAED,MCjEAqD,EAAiBrC,IAAMC,cAAmB,IAEnCqC,EAAoB,WAC/B,OAAOnC,qBAAWkC,IAIPE,EAAiD,SAAC,GAAkB,IAAhBvD,EAAe,EAAfA,SAAe,EAClD/C,oBAAS,GADyC,mBACvEuG,EADuE,KAC/DC,EAD+D,OAEhDxG,mBAAS,IAFuC,mBAEvEsF,EAFuE,KAE9DmB,EAF8D,KAa9E,OACE,cAACL,EAAeD,SAAhB,CAAyB9F,MAAO,CAAEkG,SAAQjB,UAASoB,YAVjC,SAACpB,GACnBmB,EAAWnB,GACXkB,GAAU,IAQsDG,YAN9C,WAClBH,GAAU,GACVC,EAAW,MAIX,SACG1D,KC5BQ6D,G,MCasC,SAAC,GAK/C,IAJLC,EAII,EAJJA,eACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,cAEQ1C,EAAgBL,IAAhBK,YACF2C,EAAoB,IAAItB,KACxBuB,EAAuBD,EAAYE,WAAa,EAChDC,EAAqBH,EAAYI,UACjCC,EAAqB,UAAML,EAAYM,cAAlB,YACM,GAA/BC,OAAON,GAAcO,OAAcP,EAAe,IAAMA,EAD/B,YAEM,GAA7BM,OAAOJ,GAAYK,OAAcL,EAAa,IAAMA,GAPpD,EASsBpH,mBAAyB,CACjDa,YAAa,GACbE,SAAU,MACVD,OAAQ,MACRE,YAAasG,EACbrG,cAAe,MAdb,mBASGyG,EATH,KASUC,EATV,KAiBJtE,qBAAU,WACJwD,GACejC,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAEnEC,KAAK,SACLC,MAAK,SAACC,GACLA,EAAStF,SAAQ,SAACuF,GAChB,IAAMC,EAAYD,EAAcE,MAChC,GAAID,EAAUpG,KAAO8E,EAKnB,OAJAc,EAAS,eACJQ,EAAUxH,iBAGR,QAIZuE,OAAM,SAACe,GACNb,QAAQC,IAAI,mCAAqCY,QAGtD,IAEH,IA+DQpF,EAA+C6G,EAA/C7G,YAAaE,EAAkC2G,EAAlC3G,SAAUD,EAAwB4G,EAAxB5G,OAAQE,EAAgB0G,EAAhB1G,YAEvC,OACE,uBAAMpB,UAAU,aAAayI,SAfd,SAAC9H,GAChBA,EAAI+H,iBAEAzB,EACFC,EAAUY,GAEVX,EAAQW,GAGVV,EAAczG,IAMd,UACE,uBAAOgI,QAAQ,cAAf,+BACA,uBACE3I,UAAU,gCACVmC,GAAG,cACH5B,KAAK,OACLsC,KAAK,cACLnC,SAzEsB,SAACC,GAC3BoH,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEE3H,YAAaN,EAAIE,OAAOJ,YAsExBD,YAAY,sBACZC,MAAOQ,EACP4H,UAAQ,IAEV,sBAAK7I,UAAU,4DAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,sBAAMA,UAAU,+BAAhB,uBACA,yBACEA,UAAU,qBACV6C,KAAK,WACLnC,SA3Ee,SAACC,GACxBoH,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEEzH,SAAUR,EAAIE,OAAOJ,YAwEjBA,MAAOU,EAJT,UAME,wBAAQV,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAGJ,sBAAKT,UAAU,6BAAf,UACE,sBAAMA,UAAU,+BAAhB,sBACA,yBACEA,UAAU,qBACV8I,UAAW7B,EACXpE,KAAK,SACLnC,SAhFa,SAACC,GACE,QAApBA,EAAIE,OAAOJ,MACbsH,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEEvH,cAAeqG,OAInBK,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEEvH,cAAe,SAIrB0G,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEE1H,OAAQP,EAAIE,OAAOJ,YA8DfA,MAAOS,EALT,UAOE,wBAAQT,MAAM,MAAd,iBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,OAAd,2BAIN,uBAAOkI,QAAQ,WAAf,wBACA,uBACE3I,UAAU,uBACVmC,GAAG,WACH5B,KAAK,OACLsC,KAAK,WACLnC,SAvEsB,SAACC,GAC3BoH,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEExH,YAAaT,EAAIE,OAAOJ,YAoExBA,MAAOW,IAGT,wBAAQpB,UAAU,qBAAlB,uBC/KS+I,G,MCSiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,gBAAiB/F,EAApC,EAAoCA,SAApC,OAC9B,0BAASnD,UAAS,gBAAWgJ,GAA7B,UACE,oBAAIhJ,UAAU,eAAd,SAA8BiJ,IAC7BC,GACC,wBAAQlJ,UAAU,eAAeuB,QAAS2H,EAA1C,eAID/F,OCsSUgG,EA9Ra,WAAO,IACzBzE,EAAgBL,IAAhBK,YADwB,EAGNtE,mBAA0B,CAClDC,KAAM,GACNoC,OAAQ,MACR2G,WAAW,EACXnC,gBAAgB,EAChBoC,cAAc,IARgB,mBAGzBvB,EAHyB,KAGlBC,EAHkB,KA+BhC,GApBAtE,qBAAU,WAER,IAAM6F,EAAW,SAACC,GAEhBxB,GAAS,YAAqC,EAAlCsB,aAAmC,IAAlBG,EAAiB,gCAC5C,OAAO,yBACLH,cAAc,GACXG,GAFL,IAGEC,UAAWF,EAAKf,YAIhBkB,EAAW1E,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAGtE,OAFAwB,EAASC,GAAG,QAASL,GAEd,WACLI,EAASE,IAAI,QAASN,MAEvB,IAECxB,EAAMuB,aAAc,CACtB,IAAIQ,EAAgB,IASdC,EAAU,SAAC/I,GACf,IAAMgJ,EARe,SAAChJ,GACtB,MAAO,CACLA,gBACAoB,GAAI0H,GAKqBG,CAAe,eACrCjJ,IAGMiE,IAASgD,WACjBC,IAAI,SAAWvD,EAAYwD,IAAM,UACjC+B,KAAKF,GACLzE,OAAM,SAAC4E,GACN1E,QAAQC,IAAR,2BAAgCyE,EAAExE,cAMlCyE,EAAc,SAACxJ,GACW,KAA1BA,EAAIE,OAAOuJ,aACbrC,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEE3B,gBAAgB,OAKtBc,GAAS,YAAmC,IAAhCqB,EAA+B,EAA/BA,UAAcI,EAAiB,6BACzC,OAAO,2BACFA,GADL,IAEEJ,WAAYA,QAKlB,GAAItB,EAAM2B,UAAW,CACnB,IAAIY,EAAiB,IAErBC,OAAOC,OAAOzC,EAAM2B,WAAW1G,SAAQ,SAACjB,GAClCA,EAAKK,GAAKkI,IACZA,EAAavI,EAAKK,OAGtB0H,EAAYQ,EAAa,EAEzB,IAgHQZ,EAAuD3B,EAAvD2B,UAAWpJ,EAA4CyH,EAA5CzH,KAAMoC,EAAsCqF,EAAtCrF,OAAQ2G,EAA8BtB,EAA9BsB,UAAWnC,EAAmBa,EAAnBb,eAEtCuD,EAtCa,SAACC,EAAoBhI,GACtC,OAAQA,GACN,IAAK,MACH,OAAOgI,EACT,IAAK,MACH,OAAOA,EAAMhI,QAAO,SAACX,GAAD,MAAuC,OAA7BA,EAAKf,cAAcG,UACnD,IAAK,aACH,OAAOuJ,EAAMhI,QAAO,SAACX,GAAD,MAAuC,cAA7BA,EAAKf,cAAcG,UACnD,IAAK,OACH,OAAOuJ,EAAMhI,QAAO,SAACX,GAAD,MAAuC,QAA7BA,EAAKf,cAAcG,UAEnD,QACE,OAAOuJ,GA0BqBC,CAzDnB,SAACD,EAAoBpK,GAClC,OAAoB,IAAhBA,EAAKwH,OACA4C,EAEFA,EAAMhI,QAAO,SAACX,GACnB,OAAOA,EAAKf,cAAcE,YAAY0J,cAAcC,QAAQvK,EAAKsK,gBAAkB,KAoD1CE,CAAOP,OAAOC,OAAOd,GAAYpJ,GAAOoC,GAE/EE,EAAsC,CAC1CmI,IAAKR,OAAOC,OAAOd,GAAW5B,OAC9BkD,IAAKT,OAAOC,OAAOd,GAAWhH,QAAO,SAACX,GAAD,MAAuC,OAA7BA,EAAKf,cAAcG,UAAiB2G,OACnFmD,WAAYV,OAAOC,OAAOd,GAAWhH,QACnC,SAACX,GAAD,MAAuC,cAA7BA,EAAKf,cAAcG,UAC7B2G,OACFoD,KAAMX,OAAOC,OAAOd,GAAWhH,QAAO,SAACX,GAAD,MAAuC,QAA7BA,EAAKf,cAAcG,UAAkB2G,QAGvF,OACE,sBAAM7H,UAAU,aAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,cAChB,sBAAKC,UAAU,eAAf,UACE,wBAAQA,UAAU,sBAAsBuB,QAAS4I,EAAjD,sBAGA,cAAC,EAAD,CAAahK,eAnEE,SAACE,GAEtB0H,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEEvI,eA+DE,cAAC,EAAD,CACEoC,OAAQA,EACRC,eA5Ca,SAACD,GACtBsF,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEEnG,eAyCIE,iBAAkBA,OAItB,cAAC,EAAD,CAAYlB,MAAO+I,EAAcxJ,UA7IpB,SAACmB,GACD6C,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAEnEC,KAAK,SACLC,MAAK,SAACC,GACLA,EAAStF,SAAQ,SAACuF,GAEhB,GADkBA,EAAcE,MAClBrG,KAAOA,EASnB,OARA6C,IACGgD,WACAC,IAAI,SAAWvD,EAAYwD,IAAvB,iBAAuCI,EAAc4C,MACzDlH,SACAsB,OAAM,SAACe,GAENb,QAAQC,IAAI,kBAAoBY,EAAMX,aAEnC,QAIZJ,OAAM,SAACe,GACNb,QAAQC,IAAI,mCAAqCY,OAwHO3E,WAxC3C,SAACf,EAA4CwB,GAC9D4F,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEE3B,eAAgB9E,OAIpBgI,EAAYxJ,MAkCPyI,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CACEJ,QAAQ,eACRC,MAAOhC,EAAiB,YAAc,WACtCiC,gBAAiBiB,EAHnB,SAKE,cAAC,EAAD,CACEhD,QAAS2C,EACT5C,SA/HG,SAACnG,GACCiE,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAEnEC,KAAK,SACLC,MAAK,SAACC,GACLA,EAAStF,SAAQ,SAACuF,GAEhB,GADkBA,EAAcE,MAClBrG,KAAO2F,EAAMb,eASzB,OARAjC,IACGgD,WACAC,IAAI,SAAWvD,EAAYwD,IAAvB,iBAAuCI,EAAc4C,IAArD,mBACJC,IAHH,eAGYpK,IACTuE,OAAM,SAACe,GAENb,QAAQC,IAAI,qBAAuBY,EAAMX,aAEtC,QAIZJ,OAAM,SAACe,GACNb,QAAQC,IAAI,mCAAqCY,MAGrD0B,GAAS,YAAuC,EAApCd,eAAqC,IAAlBuC,EAAiB,kCAC9C,OAAO,aACLvC,gBAAgB,GACbuC,OAqGKpC,cAAe+C,EACflD,eAAgBA,aAUhC,OACE,sBAAMjH,UAAU,aAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,cAChB,qBAAKC,UAAU,eAAf,SACE,wBAAQA,UAAU,sBAAsBuB,QAAS4I,EAAjD,wBAKF,cAAC,EAAD,CAAYxI,YAAY,0BAEvBmG,EAAMsB,WACL,cAAC,EAAD,UACE,cAAC,EAAD,CAAOJ,QAAQ,eAAeC,MAAM,WAAWC,gBAAiBiB,EAAhE,SACE,cAAC,EAAD,CACEhD,QAAS2C,EACT7C,gBAAgB,EAChBG,cAAe+C,aAU/B,OACE,sBAAMnK,UAAU,aAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,cAChB,oDCjTOqL,G,MCUyC,SAAC,GAAD,IACtDC,EADsD,EACtDA,aACApK,EAFsD,EAEtDA,YACAD,EAHsD,EAGtDA,UAHsD,OAKtD,qCACE,sBAAKhB,UAAU,eAAf,UACE,+BAAOqL,IACP,wBAAQ9K,KAAK,SAASP,UAAU,+BAA+BuB,QAASP,EAAxE,2DAIF,mBAAGhB,UAAU,oBAAb,SAAkCiB,SCtBvBqK,G,MCa6B,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOvK,EAAyC,EAAzCA,UAAWU,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC3E,GAAI4J,GAASvK,GAAaU,EAAY,CACpC,IAAM8J,EAA2BD,EAAM1J,KACrC,SAACC,GAAkC,IACzBK,EAAqBL,EAArBK,GAAOC,EADiB,YACHN,EADG,QAGhC,OACE,oBAAI9B,UAAU,aAAsBuC,cAAe,SAAC5B,GAAD,OAASe,EAAWf,EAAKwB,IAA5E,SACE,cAAC,EAAD,2BAAqBC,GAArB,IAAgCpB,UAAW,kBAAMA,EAAUmB,QAD7BA,MAOtC,OAAO,oBAAInC,UAAU,mBAAd,SAAkCwL,IAE3C,OACE,qCACE,oBAAIxL,UAAU,qBACd,+BAAO2B,SChCE8J,G,MCYsC,SAAC,GAK/C,IAJLxE,EAII,EAJJA,eACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,cAEQ1C,EAAgBL,IAAhBK,YADJ,EAEkCtE,mBAAS,IAF3C,mBAEGa,EAFH,KAEgByK,EAFhB,KAIJjI,qBAAU,WACJwD,GACejC,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAEnEC,KAAK,SACLC,MAAK,SAACC,GACLA,EAAStF,SAAQ,SAACuF,GAChB,IAAMC,EAAYD,EAAcE,MAChC,GAAID,EAAUpG,KAAO8E,EAGnB,OAFAyE,EAAenD,EAAUtH,cAElB,QAIZqE,OAAM,SAACe,GACNb,QAAQC,IAAI,mCAAqCY,QAGtD,IAkBH,OACE,uBAAMrG,UAAU,aAAayI,SAbd,SAAC9H,GAChBA,EAAI+H,iBAEAzB,EACFC,EAAUjG,GAEVkG,EAAQlG,GAGVmG,EAAczG,IAId,UACE,uBAAOgI,QAAQ,cAAf,+BACA,0BACE3I,UAAU,gCACVmC,GAAG,cACHU,KAAK,cACLnC,SAvBsB,SAACC,GAC3B+K,EAAe/K,EAAIE,OAAOJ,QAuBtBD,YAAY,mBACZC,MAAOQ,EACP4H,UAAQ,IAGV,wBAAQ7I,UAAU,qBAAlB,uBCmLS2L,EArOa,WAAO,IACzBjH,EAAgBL,IAAhBK,YADwB,EAGNtE,mBAA0B,CAClDgJ,WAAW,EACXnC,gBAAgB,EAChBoC,cAAc,IANgB,mBAGzBvB,EAHyB,KAGlBC,EAHkB,KA6BhC,GApBAtE,qBAAU,WAER,IAAMmI,EAAW,SAACrC,GAEhBxB,GAAS,YAAqC,EAAlCsB,aAAmC,IAAlBG,EAAiB,gCAC5C,OAAO,yBACLH,cAAc,GACXG,GAFL,IAGEqC,UAAWtC,EAAKf,YAIhBsD,EAAW9G,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAGtE,OAFA4D,EAASnC,GAAG,QAASiC,GAEd,WACLE,EAASlC,IAAI,QAASgC,MAEvB,IAEC9D,EAAMuB,aAAc,CACtB,IAAIQ,EAAgB,IAUdC,EAAU,SAAC7I,GACf,IAAM8I,EATe,SAAC9I,GACtB,MAAO,CACLA,cACAoK,aAAcU,IACd5J,GAAI0H,GAKqBmC,CAAe/K,GAE1C+D,IACGgD,WACAC,IAAI,SAAWvD,EAAYwD,IAAM,UACjC+B,KAAKF,GACLzE,OAAM,SAAC4E,GACN1E,QAAQC,IAAR,2BAAgCyE,EAAExE,cAIlCqG,EAA0B,WAC9B,IAAM1E,EAAoB,IAAItB,KACxBuB,EAAuBD,EAAYE,WAAa,EAChDC,EAAqBH,EAAYI,UAEvC,MAAM,GAAN,OAAuC,GAA7BG,OAAOJ,GAAYK,OAAcL,EAAa,IAAMA,EAA9D,YACiC,GAA/BI,OAAON,GAAcO,OAAcP,EAAe,IAAMA,EAD1D,YAEID,EAAYM,gBAKZwC,EAAc,SAACxJ,GACW,KAA1BA,EAAIE,OAAOuJ,aACbrC,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEE3B,gBAAgB,OAKtBc,GAAS,YAAmC,IAAhCqB,EAA+B,EAA/BA,UAAcI,EAAiB,6BACzC,OAAO,2BACFA,GADL,IAEEJ,WAAYA,QAKlB,GAAItB,EAAM+D,UAAW,CACnB,IAAIxB,EAAiB,IAErBC,OAAOC,OAAOzC,EAAM+D,WAAW9I,SAAQ,SAACjB,GAClCA,EAAKK,GAAKkI,IACZA,EAAavI,EAAKK,OAGtB0H,EAAYQ,EAAa,EAEzB,IAoEQwB,EAAyC/D,EAAzC+D,UAAWzC,EAA8BtB,EAA9BsB,UAAWnC,EAAmBa,EAAnBb,eAE9B,OACE,sBAAMjH,UAAU,aAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,UAChB,wBAAQC,UAAU,sBAAsBuB,QAAS4I,EAAjD,sBAGA,cAAC,EAAD,CACEoB,MAAOjB,OAAOC,OAAOsB,GACrB7K,UA/EW,SAACmB,GACD6C,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAEnEC,KAAK,SACLC,MAAK,SAACC,GACLA,EAAStF,SAAQ,SAACuF,GAEhB,GADkBA,EAAcE,MAClBrG,KAAOA,EASnB,OARA6C,IACGgD,WACAC,IAAI,SAAWvD,EAAYwD,IAAvB,iBAAuCI,EAAc4C,MACzDlH,SACAsB,OAAM,SAACe,GAENb,QAAQC,IAAI,kBAAoBY,EAAMX,aAEnC,QAIZJ,OAAM,SAACe,GACNb,QAAQC,IAAI,mCAAqCY,OA2D/C3E,WAvBW,SAACf,EAAsCwB,GACxD4F,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,IAEE3B,eAAgB9E,OAIpBgI,EAAYxJ,MAiBPyI,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CACEJ,QAAQ,eACRC,MAAOhC,EAAiB,YAAc,WACtCiC,gBAAiBiB,EAHnB,SAKE,cAAC,EAAD,CACEhD,QAAS2C,EACT5C,SAlEG,SAACjG,GACC+D,IAASgD,WAAWC,IAAI,SAAWvD,EAAYwD,IAAM,UAEnEC,KAAK,SACLC,MAAK,SAACC,GACLA,EAAStF,SAAQ,SAACuF,GAEhB,GADkBA,EAAcE,MAClBrG,KAAO2F,EAAMb,eASzB,OARAjC,IACGgD,WACAC,IAAI,SAAWvD,EAAYwD,IAAvB,iBAAuCI,EAAc4C,IAArD,iBACJC,IAAIlK,GACJqE,OAAM,SAACe,GAENb,QAAQC,IAAI,qBAAuBY,EAAMX,aAEtC,QAIZJ,OAAM,SAACe,GACNb,QAAQC,IAAI,mCAAqCY,MAGrD0B,GAAS,YAAuC,EAApCd,eAAqC,IAAlBuC,EAAiB,kCAC9C,OAAO,aACLvC,gBAAgB,GACbuC,OAwCKpC,cAAe+C,EACflD,eAAgBA,aAUhC,OACE,sBAAMjH,UAAU,aAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,UAChB,wBAAQC,UAAU,sBAAsBuB,QAAS4I,EAAjD,sBAGA,cAAC,EAAD,CAAWxI,YAAY,0BACtBmG,EAAMsB,WACL,cAAC,EAAD,UACE,cAAC,EAAD,CAAOJ,QAAQ,eAAeC,MAAM,WAAWC,gBAAiBiB,EAAhE,SACE,cAAC,EAAD,CACEhD,QAAS2C,EACT1C,cAAe+C,EACflD,gBAAgB,aAUhC,OACE,sBAAMjH,UAAU,aAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,UAChB,oD,QCpPOkM,G,MCakD,SAAC,GAI3D,IAHL7E,EAGI,EAHJA,cACAjC,EAEI,EAFJA,KACAL,EACI,EADJA,mBACI,EACkC1E,mBAA8B,CAClE8L,SAAU/G,EAAKgH,MACfC,SAAU,KAHR,mBACGC,EADH,KACgBC,EADhB,OAKsBlM,mBAAS+E,EAAKgH,OALpC,mBAKGA,EALH,KAKUI,EALV,OAMoCnM,oBAAS,GAN7C,mBAMGoM,EANH,KAMiBC,EANjB,KAQEC,EAAsB,SAAC/L,GAC3B,IAAMwB,EAAaxB,EAAIE,OAAOsB,GACxB1B,EAAgBE,EAAIE,OAAOJ,MAEjC6L,GAAe,SAAC1D,GACd,OAAO,2BACFA,GADL,kBAEGzG,EAAK1B,QAuCZ,OACE,uBACET,UAAU,oBACVyI,SAAU+D,EAjCe,SAAC7L,GAC5BA,EAAI+H,iBADwE,IAEpEwD,EAAuBG,EAAvBH,SAAUE,EAAaC,EAAbD,SAEZO,EAAa3H,IAASC,KAAK2H,kBAAkBD,WAAWT,EAAUE,GAExEjH,EACG0H,6BAA6BF,GAC7BvE,MAAK,WACJqE,GAAgB,MAEjBnH,OAAM,SAACe,GACNb,QAAQC,IAAI,4GAA6BY,OAGzB,SAAC1F,GACrBA,EAAI+H,iBAEJvD,EACG2H,wBAAwBX,EAAOrH,GAC/BsD,MAAK,WAEJ5C,QAAQC,IAAI,qDACZ2B,EAAczG,MAEf2E,OAAM,SAAUC,GACfC,QAAQC,IAAI,kHAA8BF,EAAIG,aAKlD,UAIG8G,EACC,qCACE,uBAAO7D,QAAQ,WAAf,6BACA,uBACE3I,UAAU,qCACVmC,GAAG,WACH5B,KAAK,QACLC,YAAY,sBACZE,SAAUgM,EACVjM,MAAO4L,EAAYH,SACnBrD,UAAQ,IAGV,uBAAOF,QAAQ,WAAf,4BACA,uBACE3I,UAAU,oCACVmC,GAAG,WACH5B,KAAK,WACLC,YAAY,qBACZE,SAAUgM,EACVjM,MAAO4L,EAAYD,SACnBvD,UAAQ,OAIZ,qCACE,uBAAOF,QAAQ,WAAf,6BACA,uBACE3I,UAAU,qCACVmC,GAAG,WACH5B,KAAK,QACLC,YAAY,kBACZE,SAvEY,SAACC,GACrB4L,EAAS5L,EAAIE,OAAOJ,QAuEZA,MAAO0L,EACPtD,UAAQ,OAKd,wBAAQ7I,UAAU,4BAAlB,SAA+CwM,EAAe,WAAa,cCnHlEO,G,MCYwD,SAAC,GAGjE,IAFL3F,EAEI,EAFJA,cACAjC,EACI,EADJA,KACI,EACkC/E,mBAA8B,CAClE+L,MAAOhH,EAAKgH,MACZa,YAAa,KAHX,mBACGX,EADH,KACgBC,EADhB,OAKoClM,oBAAS,GAL7C,mBAKGoM,EALH,KAKiBC,EALjB,OAM4BrM,mBAAS,IANrC,mBAMGgM,EANH,KAMaa,EANb,KAQEP,EAAsB,SAAC/L,GAC3B,IAAMwB,EAAaxB,EAAIE,OAAOsB,GACxB1B,EAAgBE,EAAIE,OAAOJ,MAEjC6L,GAAe,SAAC1D,GACd,OAAO,2BACFA,GADL,kBAEGzG,EAAK1B,QAuCZ,OACE,uBACET,UAAU,uBACVyI,SAAU+D,EAjCe,SAAC7L,GAC5BA,EAAI+H,iBADwE,IAEpEyD,EAAuBE,EAAvBF,MAAOa,EAAgBX,EAAhBW,YAETL,EAAa3H,IAASC,KAAK2H,kBAAkBD,WAAWR,EAAOa,GAErE7H,EACG0H,6BAA6BF,GAC7BvE,MAAK,WACJqE,GAAgB,MAEjBnH,OAAM,SAACe,GACNb,QAAQC,IAAI,4GAA6BY,OAItB,SAAC1F,GACxBA,EAAI+H,iBAEJvD,EACG+H,eAAed,GACfhE,MAAK,WACJ5C,QAAQC,IAAI,4IACZ2B,EAAczG,MAEf2E,OAAM,SAACC,GACNC,QAAQC,IAAI,qKAAoCF,OAKpD,UAIGiH,EACC,qCACE,uBAAO7D,QAAQ,QAAf,yBACA,uBACE3I,UAAU,oCACVmC,GAAG,QACH5B,KAAK,QACLC,YAAY,kBACZE,SAAUgM,EACVjM,MAAO4L,EAAYF,MACnBtD,UAAQ,IAGV,uBAAOF,QAAQ,cAAf,gCACA,uBACE3I,UAAU,2CACVmC,GAAG,cACH5B,KAAK,WACLC,YAAY,yBACZE,SAAUgM,EACVjM,MAAO4L,EAAYW,YACnBnE,UAAQ,OAIZ,qCACE,uBAAOF,QAAQ,cAAf,gCACA,uBACE3I,UAAU,2CACVmC,GAAG,cACH5B,KAAK,WACLC,YAAY,qBACZE,SAvEe,SAACC,GACxBsM,EAAYtM,EAAIE,OAAOJ,QAuEfA,MAAO2L,EACPvD,UAAQ,OASd,wBAAQ7I,UAAU,+BAAlB,SAAkDwM,EAAe,WAAa,cCrHrEW,G,MCYkE,SAAC,GAG3E,IAFL/F,EAEI,EAFJA,cACAjC,EACI,EADJA,KACI,EACkC/E,mBAA8B,CAClE+L,MAAOhH,EAAKgH,MACZC,SAAU,KAHR,mBACGC,EADH,KACgBC,EADhB,OAKoClM,oBAAS,GAL7C,mBAKGoM,EALH,KAKiBC,EALjB,KAOEC,EAAsB,SAAC/L,GAC3B,IAAMwB,EAAaxB,EAAIE,OAAOsB,GACxB1B,EAAgBE,EAAIE,OAAOJ,MAEjC6L,GAAe,SAAC1D,GACd,OAAO,2BACFA,GADL,kBAEGzG,EAAK1B,QAgCZ,OACE,sBACET,UAAU,sBACVyI,SAAU+D,EA9Be,SAAC7L,GAC5BA,EAAI+H,iBADwE,IAEpEyD,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAETO,EAAa3H,IAASC,KAAK2H,kBAAkBD,WAAWR,EAAOC,GAErEjH,EACG0H,6BAA6BF,GAC7BvE,MAAK,WACJqE,GAAgB,MAEjBnH,OAAM,SAACe,GACNb,QAAQC,IAAI,4GAA6BY,OAIvB,SAAC1F,GACvBA,EAAI+H,iBACJvD,EAAKiI,SAAS9H,OAAM,SAACC,GACnBC,QAAQC,IAAIF,OASd,SAIGiH,EACC,qCACE,uBAAO7D,QAAQ,QAAf,yBACA,uBACE3I,UAAU,mCACVmC,GAAG,QACH5B,KAAK,QACLC,YAAY,kBACZE,SAAUgM,EACVjM,MAAO4L,EAAYF,MACnBtD,UAAQ,IAGV,uBAAOF,QAAQ,WAAf,4BACA,uBACE3I,UAAU,sCACVmC,GAAG,WACH5B,KAAK,WACLC,YAAY,qBACZE,SAAUgM,EACVjM,MAAO4L,EAAYD,SACnBvD,UAAQ,IAEV,wBAAQ7I,UAAU,8BAAlB,yBAGF,qCACE,2GACA,sBAAKA,UAAU,mCAAf,UACE,wBAAQA,UAAU,6BAA6BO,KAAK,SAApD,iBAGA,wBACEP,UAAU,gCACVO,KAAK,SACLgB,QA5CkB,SAACZ,GAC7ByG,EAAczG,IAwCN,0BCkKG0M,G,MAzPgB,WAAO,IAAD,EACShJ,IAApCK,EAD2B,EAC3BA,YAAaI,EADc,EACdA,mBADc,EAGX1E,mBAASsE,EAAY4I,aAHV,mBAG5BzK,EAH4B,KAGtB0K,EAHsB,OAIHnN,mBAASsE,EAAY8I,UAJlB,mBAI5BC,EAJ4B,KAIlBC,EAJkB,OAKOtN,oBAAS,GALhB,mBAK5BuN,EAL4B,KAKbC,EALa,OAMWxN,oBAAS,GANpB,mBAM5ByN,EAN4B,KAMXC,EANW,OAOqB1N,oBAAS,GAP9B,mBAO5B2N,EAP4B,KAONC,EAPM,OAQ2B5N,oBAAS,GARpC,mBAQ5B6N,EAR4B,KAQHC,EARG,OASyB9N,oBAAS,GATlC,mBAS5B+N,EAT4B,KASJC,EATI,KAW7BC,EAAyD,cAA1C3J,EAAY4J,aAAa,GAAGC,WAC3CpC,EAAQzH,EAAYyH,MA+DpBqC,EAAyB,SAC7B7N,GAKAqN,GAAwB,SAACS,GAAD,OAAWA,MAG/BC,EAA4B,SAChC/N,GAEAuN,GAA2B,SAACO,GAAD,OAAWA,MAGlCE,EAA2B,SAC/BhO,GAEAyN,GAA0B,SAACK,GAAD,OAAWA,MAGvC,OACE,sBAAMzO,UAAU,gBAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,KAAK,aAChB,sBAAMC,UAAU,0BAAhB,qBAEA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,8CAAf,UACE,qBACEA,UAAU,wBACV4O,IACEnB,GAEI,sGAENlM,QA5EU,WACpBuM,GAAmB,IA4ETe,MAAM,MACNC,OAAO,MACPC,IAAI,kBAELlB,EACC,qCAEE,uBACE7N,UAAU,oDACVO,KAAK,OACLsC,KAAK,SACLnC,SArDS,SAACC,GACxB+M,EAAY/M,EAAIE,OAAOJ,QAqDTD,YAAY,0BACZC,MAAOgN,GAAsB,KAE/B,wBAAQzN,UAAU,qBAAqBuB,QAzF9B,WACrBmD,EACGsK,cAAc,CACbxB,SAAUC,IAEXrF,MAAK,kBAAM0F,GAAmB,MAC9BxI,OAAM,SAACC,GACNC,QAAQC,IAAI,yNAA2CF,EAAIG,aAkFnD,kBAGA,wBAAQ1F,UAAU,qBAAqBuB,QAlF5B,WACvBmM,EAAYhJ,EAAY8I,UACxBM,GAAmB,IAgFP,uBAIA,QAGLH,EACC,sBAAK3N,UAAU,gBAAf,UACE,uBACEA,UAAU,kDACVO,KAAK,OACLsC,KAAK,OACLnC,SA5EO,SAACC,GACpB4M,EAAQ5M,EAAIE,OAAOJ,QA4EPD,YAAY,qBACZC,MAAOoC,GAAc,KAEvB,wBAAQ7C,UAAU,qBAAqBuB,QAhIhC,WACjBmD,EACGsK,cAAc,CACb1B,YAAazK,IAEduF,MAAK,kBAAMwF,GAAiB,MAC5BtI,OAAM,SAACC,GACNC,QAAQC,IAAI,uMAAwCF,EAAIG,aAyHlD,kBAGA,wBAAQ1F,UAAU,qBAAqBuB,QAzH9B,WACnBgM,EAAQ7I,EAAY4I,aACpBM,GAAiB,IAuHP,uBAKF,qBAAK5N,UAAU,gBAAf,SACE,sBAAMA,UAAU,sBAAsBuB,QA7I9B,WAClBqM,GAAiB,IA4IP,SACG/K,GAAc,gBAKrB,sBAAK7C,UAAU,qCAAf,UACE,sBAAMuB,QAAS8M,OAAeY,EAAYT,EAA1C,0BAEA,sBACExO,UACEqO,EACI,uDACA,sBAEN9M,QAAS8M,OAAeY,EAAYT,EANtC,SAQGrC,QAIHkC,GACA,qCACE,qBAAKrO,UAAU,gBAAf,SACE,wBAAQA,UAAU,qBAAqBuB,QAASmN,EAAhD,+BAIF,qBAAK1O,UAAU,gBAAf,SACE,wBAAQA,UAAU,qBAAqBuB,QAnIjB,WAClCyD,IACGC,OACAiK,uBAAuB/C,EAAOrH,GAC9BsD,MAAK,eAGL9C,OAAM,SAACC,GACNC,QAAQC,IAAI,yHAAgCF,EAAIG,aA2HxC,sDAON,qBAAK1F,UAAU,gBAAf,SACE,wBAAQA,UAAU,qBAAqBuB,QAASoN,EAAhD,iCAKJ,sBAAM3O,UAAU,0BAAhB,iBAGC+N,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CACE/E,QAAQ,sBACRC,MAAM,qBACNC,gBAAiBsF,EAHnB,SAKE,cAAC,EAAD,CACEpH,cAAeoH,EACfrJ,KAAMT,EACNI,mBAAoBA,QAK3BmJ,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CACEjF,QAAQ,yBACRC,MAAM,wBACNC,gBAAiBwF,EAHnB,SAKE,cAAC,EAAD,CACEtH,cAAesH,EACfvJ,KAAMT,QAKbyJ,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CACEnF,QAAQ,wBACRC,MAAM,uBACNC,gBAAiByF,EAHnB,SAKE,cAAC,EAAD,CACExJ,KAAMT,EACN0C,cAAeuH,eC1PhBQ,G,MCYsB,WAAO,IAClCrI,EAAgBL,IAAhBK,YADiC,EAGf1G,mBAAmC,CAC3D+L,MAAO,GACPC,SAAU,GACVgD,eAAgB,KANuB,mBAGlCtH,EAHkC,KAG3BC,EAH2B,KASnCrH,EAAW,SAACC,GAChB,IAAMwB,EAAaxB,EAAIE,OAAOsB,GACxB1B,EAAgBE,EAAIE,OAAOJ,MACjCsH,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,kBAEGzG,EAAK1B,QAgCZ,OACE,qCACE,uBAAMT,UAAU,eAAeyI,SA7BlB,SAAC9H,GAChBA,EAAI+H,iBAD4D,IAGxDyD,EAAoCrE,EAApCqE,MAAOC,EAA6BtE,EAA7BsE,SACXA,GADwCtE,EAAnBsH,eAEvBpK,IACGC,OACAoK,+BAA+BlD,EAAOC,GACtChE,MAAK,kBAAMzC,aAAa2J,QAAQ,aAAc,WAC9ChK,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE9BuB,EAAY,mDAkBZ,UACE,uBAAO6B,QAAQ,QAAf,yBACA,uBACE3I,UAAU,4BACVmC,GAAG,QACH5B,KAAK,QACLsC,KAAK,QACLrC,YAAY,mBACZE,SAAUA,EACVmI,UAAQ,IAGV,uBAAOF,QAAQ,WAAf,4BACA,uBACE3I,UAAU,+BACVmC,GAAG,WACH5B,KAAK,WACLsC,KAAK,WACLrC,YAAY,oBACZE,SAAUA,EACVmI,UAAQ,IAGV,uBAAOF,QAAQ,iBAAf,mCACA,uBACE3I,UAAU,sCACVmC,GAAG,iBACH5B,KAAK,WACLsC,KAAK,kBACLrC,YAAY,oBACZE,SAAUA,EACVmI,UAAQ,IAGV,wBAAQ7I,UAAU,uBAAlB,wBAGF,uBAAMA,UAAU,sCAAhB,kEACwD,IACtD,cAAC,IAAD,CAAMA,UAAU,8BAA8BuP,GAAG,IAAIhO,QArDtC,WACnB,IAAMiO,EAAW,IAAIxK,IAASC,KAAKwK,mBAEnCzK,IACGC,OACAyK,gBAAgBF,GAChBpH,MAAK,kBAAMzC,aAAa2J,QAAQ,aAAc,WAC9ChK,OAAM,SAACe,GACNS,EAAYT,EAAMX,aA6ClB,6BAKF,uBAAM1F,UAAU,gCAAhB,qCAC2B,IACzB,cAAC,IAAD,CAAMA,UAAU,+BAA+BuP,GAAG,WAAlD,6BChGOI,EARc,kBAC3B,sBAAM3P,UAAU,eAAhB,SACE,cAAC,EAAD,CAAOgJ,QAAQ,iBAAiBC,MAAM,UAAtC,SACE,cAAC,EAAD,SCNS2G,G,MCUsB,WAAO,IAClC9I,EAAgBL,IAAhBK,YADiC,EAGf1G,mBAAmC,CAC3D+L,MAAO,GACPC,SAAU,KAL6B,mBAGlCtE,EAHkC,KAG3BC,EAH2B,OAOa3H,mBACpDuF,aAAaC,QAAQ,eARkB,mBAOlCiK,EAPkC,KAObC,EAPa,KAWnCpP,EAAW,SAACC,GAChB,IAAMwB,EAAaxB,EAAIE,OAAOsB,GACxB1B,EAAgBE,EAAIE,OAAOJ,MACjCsH,GAAS,SAACa,GACR,OAAO,2BACFA,GADL,kBAEGzG,EAAK1B,QAwBZ,OACE,qCACE,uBAAMT,UAAU,eAAeyI,SAXlB,SAAC9H,GAChBA,EAAI+H,iBAD4D,IAExDyD,EAAoBrE,EAApBqE,MAAOC,EAAatE,EAAbsE,SACfpH,IACGC,OACA8K,2BAA2B5D,EAAOC,GAClC9G,OAAM,SAACC,GAAD,OAASuB,EAAYvB,EAAIG,aAKhC,UACE,uBAAOiD,QAAQ,QAAf,yBACA,uBACE3I,UAAU,4BACVmC,GAAG,QACH5B,KAAK,QACLsC,KAAK,QACLrC,YAAY,kBACZE,SAAUA,EACVmI,UAAQ,IAGV,uBAAOF,QAAQ,WAAf,4BACA,uBACE3I,UAAU,+BACVmC,GAAG,WACH5B,KAAK,WACLsC,KAAK,WACLrC,YAAY,qBACZE,SAAUA,EACVmI,UAAQ,IAEV,uBAAOF,QAAQ,aAAf,0BACA,uBACE3I,UAAU,qCACVmC,GAAG,aACH5B,KAAK,WACLsC,KAAK,cACLnC,SAjDmB,SAACC,GACtBkP,GACFlK,aAAaqK,WAAW,cACxBF,EAAuB,QAEvBnK,aAAa2J,QAAQ,aAAc,QACnCQ,EAAuB,UA4CnBG,UAASJ,IAGX,wBAAQ7P,UAAU,uBAAlB,wBAGF,cAAC,IAAD,CAAMA,UAAU,8BAA8BuP,GAAG,IAAjD,iCAIA,uBAAMvP,UAAU,8BAAhB,6BACmB,IACjB,cAAC,IAAD,CAAMA,UAAU,6BAA6BuP,GAAG,kBAAhD,sBAIF,uBAAMvP,UAAU,gCAAhB,sBACY,IACV,cAAC,IAAD,CAAMA,UAAU,+BAA+BuP,GAAG,WAAlD,6BCzFOW,EARc,kBAC3B,sBAAMlQ,UAAU,eAAhB,SACE,cAAC,EAAD,CAAOgJ,QAAQ,iBAAiBC,MAAM,UAAtC,SACE,cAAC,EAAD,SCgDSkH,G,MAjD6B,WAAO,IACzCrL,EAAuBT,IAAvBS,mBACAgC,EAAgBL,IAAhBK,YAFwC,EAItB1G,mBAAS,IAJa,mBAIzC+L,EAJyC,KAIlCI,EAJkC,KAwBhD,OACE,qCACE,uBAAMvM,UAAU,sBAAsByI,SAfzB,SAAC9H,GAChBA,EAAI+H,iBACJ1D,IACGC,OACAiK,uBAAuB/C,EAAOrH,GAC9BsD,MAAK,eAGL9C,OAAM,SAACC,GACNuB,EAAYvB,EAAIG,aAMlB,UACE,uBAAOiD,QAAQ,QAAf,yBACA,uBACE3I,UAAU,mCACVmC,GAAG,QACH5B,KAAK,QACLsC,KAAK,QACLrC,YAAY,kBACZE,SA5BS,SAACC,GAEhB4L,EAAS5L,EAAIE,OAAOJ,QA2BdA,MAAO0L,EACPtD,UAAQ,IAGV,wBAAQ7I,UAAU,8BAAlB,+BAGF,cAAC,IAAD,CAAMA,UAAU,sCAAsCuP,GAAG,WAAzD,gCCnCSa,EARqB,kBAClC,sBAAMpQ,UAAU,sBAAhB,SACE,cAAC,EAAD,CAAOgJ,QAAQ,wBAAwBC,MAAM,iBAA7C,SACE,cAAC,EAAD,SCPSoH,G,MCKU,WAUvB,OACE,wBAAQrQ,UAAU,cAAlB,SACE,sBAAKA,UAAU,2CAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMuP,GAAG,IAAT,mBACA,qBAAIvP,UAAU,iBAAd,UACE,oBAAIA,UAAU,iBAAd,SACE,cAAC,IAAD,CAAMuP,GAAG,QAAT,oBAEF,oBAAIvP,UAAU,iBAAd,SACE,cAAC,IAAD,CAAMuP,GAAG,SAAT,qBAEF,oBAAIvP,UAAU,iBAAd,SACE,cAAC,IAAD,CAAMuP,GAAG,YAAT,8BAKN,wBAAQvP,UAAU,wBAAwBuB,QA3BhC,SAACZ,GACfqE,IACGC,OACAmB,UACAd,OAAM,SAACe,GACNb,QAAQC,IAAIY,EAAMX,aAsBlB,6BCjCO4K,G,MCGW,WAAO,IAAD,EACW7J,IAAjCf,EADsB,EACtBA,QAASiB,EADa,EACbA,OAAQI,EADK,EACLA,YAEzB,OAAOJ,EACL,sBAAK3G,UAAU,UAAf,UACE,sBAAMA,UAAU,mBAAhB,SAAoC0F,IACpC,wBAAQ1F,UAAU,iBAAiBuB,QAAS,kBAAMwF,KAAlD,kBAIA,OCbSwJ,G,kBCkBO,WAAO,IAAD,EACUlM,IAA5BG,EADkB,EAClBA,WAAYE,EADM,EACNA,YAEpB,OACE,cAAC,IAAD,UACGF,EACC,mCACGE,EAAYU,cACX,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAOoL,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,KAAcC,OAAK,IACjD,cAAC,IAAD,CAAOF,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,OAClC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAUlB,GAAG,SAGf,qCACE,cAAC,EAAD,IACA,qBAAKvP,UAAU,eAAf,SACE,sBAAMA,UAAU,uBAAhB,6DAQR,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOwQ,KAAK,WAAWC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAUlB,GAAG,oB,YCxBvBvK,IAAS2L,cAV+B,CACtCC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,iDACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAKTC,IAASV,OACP,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJpN,SAASS,cAAc,a","file":"static/js/main.4fdb8037.chunk.js","sourcesContent":["import PageTitle from \"./page-title\";\r\nexport default PageTitle;\r\n","import React from \"react\";\r\n\r\ninterface PageTitleProps {\r\n  text: string\r\n}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ text }) => {\r\n  return <h1 className=\"page-title\">{text}</h1>;\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport PageTitle from '../components/page-title/';\r\n\r\nconst MainPage: React.FC = () => (\r\n  <main className=\"main-page\">\r\n    <div className=\"container\">\r\n      <PageTitle text=\"Welcome to the greatest todo app ever!!!\" />\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default MainPage;\r\n","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;\r\n","import React, { useState } from 'react';\r\nimport './search-panel.css';\r\n\r\ninterface SearchPanelProps {\r\n  onSearchChange: (changedTerm: string) => void;\r\n}\r\n\r\nconst SearchPanel: React.FC<SearchPanelProps> = ({ onSearchChange }) => {\r\n  const [term, setTerm] = useState<string>('');\r\n\r\n  const onSearchReplace = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const changedTerm = evt.target.value;\r\n    setTerm(changedTerm);\r\n\r\n    onSearchChange(changedTerm);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Type this somthing\"\r\n      className=\"search-input\"\r\n      value={term}\r\n      onChange={onSearchReplace}\r\n    />\r\n  );\r\n};\r\nexport default SearchPanel;\r\n","import TodoItemContent from \"./todo-item-content\";\r\nexport default TodoItemContent;\r\n","import React from 'react';\r\nimport { IFieldsContent } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport './todo-item-content.css';\r\n\r\ninterface TodoItemContentProps {\r\n  fieldsContent: IFieldsContent;\r\n  onDeleted: () => any;\r\n  // onDeleted: () => (id: Id) => void\r\n}\r\n\r\nconst TodoItemContent: React.FC<TodoItemContentProps> = ({ fieldsContent, onDeleted }) => {\r\n  const { description, status, priority, endDatePlan, endDateActual } = fieldsContent;\r\n\r\n  const classNames: string = 'table__item-cell';\r\n\r\n  return (\r\n    <>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--description\">{description}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--status\">{status}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--priority\">{priority}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--datePlan\">{endDatePlan}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--actualDate\">{endDateActual}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <button type=\"button\" className=\"btn table__btn table__btn--del\" onClick={onDeleted}>\r\n          Удалить\r\n        </button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoItemContent;\r\n","import TodosTable from './todos-table';\r\nexport default TodosTable;\r\n","import React from 'react';\r\n\r\nimport TodoItemContent from '../todo-item-content';\r\nimport { ITodoItem } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport './todos-table.css';\r\n\r\ninterface TodosTableProps {\r\n  todos?: ITodoItem[];\r\n  onDeleted?: (id: Id) => void;\r\n  onSelected?: (evt: React.MouseEvent<HTMLTableRowElement>, id: Id) => void;\r\n  overlayText?: string;\r\n}\r\n\r\nconst TodosTable: React.FC<TodosTableProps> = ({ todos, onDeleted, onSelected, overlayText }) => {\r\n  const tableHeadersText: string[] = [\r\n    'Description',\r\n    'Status',\r\n    'Priority',\r\n    'End date plan',\r\n    'End date actual',\r\n    'Action',\r\n  ];\r\n\r\n  const tableHeaders: JSX.Element[] = tableHeadersText.map(\r\n    (item: string): JSX.Element => {\r\n      const additionalClass: string =\r\n        item == 'Description'\r\n          ? 'table__header--description'\r\n          : item == 'Status'\r\n          ? 'table__header--status'\r\n          : item == 'Priority'\r\n          ? 'table__header--priority'\r\n          : item == 'End date plan'\r\n          ? 'table__header--planDate'\r\n          : item == 'End date actual'\r\n          ? 'table__header--actualDate'\r\n          : item == 'Action'\r\n          ? 'table__header--action'\r\n          : '';\r\n\r\n      const clazz: string = additionalClass ? `table__header ${additionalClass}` : 'table__header';\r\n\r\n      return (\r\n        <th key={item} className={clazz} scope=\"col\">\r\n          {item}\r\n        </th>\r\n      );\r\n    }\r\n  );\r\n  if (todos && onDeleted && onSelected) {\r\n    const tableRows: JSX.Element[] = todos.map(\r\n      (item: ITodoItem): JSX.Element => {\r\n        const { id, ...itemProps } = item;\r\n\r\n        const importantClass: string | null =\r\n          itemProps.fieldsContent.priority == 'High' ? 'table__item--important' : null;\r\n        const doneClass: string | null =\r\n          itemProps.fieldsContent.status == 'Done' ? 'table__item--done' : null;\r\n\r\n        return (\r\n          <tr\r\n            className={`table__item ${doneClass} ${importantClass}`}\r\n            key={id}\r\n            onDoubleClick={(evt) => onSelected(evt, id)}\r\n          >\r\n            <TodoItemContent {...itemProps} onDeleted={() => onDeleted(id)} />\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <table className=\"table table--todo\">\r\n        <thead>\r\n          <tr className=\"table__headers table--todo__headers\">{tableHeaders}</tr>\r\n        </thead>\r\n        <tbody>{tableRows}</tbody>\r\n      </table>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <table className=\"table table--todo\">\r\n        <thead>\r\n          <tr className=\"table__headers table--todo__headers\">{tableHeaders}</tr>\r\n        </thead>\r\n        <tbody></tbody>\r\n      </table>\r\n      <span>{overlayText}</span>\r\n    </>\r\n  );\r\n};\r\nexport default TodosTable;\r\n","import StatusFilter from \"./status-filter\";\r\nexport default StatusFilter;\r\n","import React from 'react';\r\nimport './status-filter.css';\r\nimport { IEveryStatusCount } from '../../../../interfaces';\r\n\r\ninterface IButtonsParams {\r\n  name: string;\r\n  label: string;\r\n  count?: number;\r\n}\r\n\r\ninterface StatusFilterProps {\r\n  filter: string;\r\n  onFilterChange: (name: string) => void;\r\n  everyStatusCount: IEveryStatusCount;\r\n}\r\n\r\nconst StatusFilter: React.FC<StatusFilterProps> = ({\r\n  filter,\r\n  onFilterChange,\r\n  everyStatusCount,\r\n}) => {\r\n  const buttonsParams: IButtonsParams[] = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'new', label: 'New' },\r\n    { name: 'inProgress', label: 'In progress' },\r\n    { name: 'done', label: 'Done' },\r\n  ];\r\n\r\n  buttonsParams.forEach((item) => {\r\n    item.count = everyStatusCount[item.name];\r\n  });\r\n\r\n  const buttons: JSX.Element[] = buttonsParams.map(\r\n    ({ name, label, count }): JSX.Element => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'status-filter__btn--active' : null;\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={`status-filter__btn btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => {\r\n            onFilterChange(name);\r\n          }}\r\n        >\r\n          {`${label} - ${count}`}\r\n        </button>\r\n      );\r\n    }\r\n  );\r\n  return <div className=\"status-filter\">{buttons}</div>;\r\n};\r\n\r\nexport default StatusFilter;\r\n","import Portal from \"./portal\";\r\nexport default Portal;\r\n","import React, { ReactNode, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport './portal.css';\r\n\r\ninterface PortalProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Portal: React.FC<PortalProps> = ({ children }) => {\r\n  const el: HTMLDivElement = document.createElement('div');\r\n  el.classList.add('overlay');\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = 'hidden';\r\n    // document.querySelector(\"#modal\").append(el);\r\n\r\n    const modalHtml: HTMLDivElement | null = document.querySelector('#modal');\r\n    if (modalHtml) {\r\n      modalHtml.append(el);\r\n    }\r\n\r\n    return () => {\r\n      el.remove();\r\n      document.body.style.overflow = 'visible';\r\n    };\r\n  }, []);\r\n\r\n  return createPortal(children, el);\r\n};\r\n\r\nexport default Portal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\ninterface AppContextProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n//По идее мне не нужно указывать тип и аргумент. Нужно посмотреть, как сделать нормально\r\nconst AppContext = React.createContext<any>({});\r\n\r\nexport const useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\n//Не уверен, что корректно давать контексту тип React.FC\r\nexport const AppProvider: React.FC<AppContextProps> = ({ children }) => {\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(false);\r\n  const [isUserGet, setUserGet] = useState(false);\r\n\r\n  const actionCodeSettings = {\r\n    // @todo Заменить на реальный адрес приложения\r\n    url: 'https://vladmokrousov.github.io/doit/build/index.html',\r\n    // url: 'http://localhost:3000/sign-in',\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        if (!user.emailVerified) {\r\n          user.sendEmailVerification(actionCodeSettings).catch((err) => {\r\n            console.log('При подтверждении email произошла ошибка', err.message);\r\n          });\r\n        }\r\n        if (!localStorage.getItem('rememberMe')) {\r\n          const lastSignInTime = new Date(user.metadata.lastSignInTime!);\r\n          const lastSignInTimeTimeStamp = Math.round(lastSignInTime.getTime() / 1000);\r\n          const yesterdayTimeStamp = Math.round(new Date().getTime() / 1000) - 24 * 3600;\r\n\r\n          if (lastSignInTimeTimeStamp < yesterdayTimeStamp) {\r\n            firebase\r\n              .auth()\r\n              .signOut()\r\n              .catch((error) => {\r\n                console.log(error.message);\r\n              });\r\n          } else {\r\n            onLogIn(user);\r\n          }\r\n        } else {\r\n          onLogIn(user);\r\n        }\r\n      } else {\r\n        onLogOut();\r\n      }\r\n      setUserGet(true);\r\n    });\r\n  }, []);\r\n\r\n  const onLogIn = (user: any): void => {\r\n    setLoggedIn(true);\r\n    setCurrentUser(user);\r\n  };\r\n  const onLogOut = (): void => {\r\n    setLoggedIn(false);\r\n    setCurrentUser(false);\r\n  };\r\n\r\n  return isUserGet ? (\r\n    <AppContext.Provider value={{ isLoggedIn, currentUser, actionCodeSettings }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  ) : null;\r\n};\r\n","import React, { useState, useContext } from 'react';\r\n\r\ninterface TooltipContextProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n//По идее мне не нужно указывать тип и аргумент. Нужно посмотреть, как сделать нормально\r\nconst TooltipContext = React.createContext<any>({});\r\n\r\nexport const useTooltipContext = () => {\r\n  return useContext(TooltipContext);\r\n};\r\n\r\n//Не уверен, что корректно давать контексту тип React.FC\r\nexport const TooltipProvider: React.FC<TooltipContextProps> = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const showTooltip = (message: string): void => {\r\n    setMessage(message);\r\n    setIsOpen(true);\r\n  };\r\n  const hideTooltip = (): void => {\r\n    setIsOpen(false);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <TooltipContext.Provider value={{ isOpen, message, showTooltip, hideTooltip }}>\r\n      {children}\r\n    </TooltipContext.Provider>\r\n  );\r\n};\r\n","import TodosModalContent from './todos-modal-content';\r\nexport default TodosModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAppContext } from '../../../../context';\r\nimport { IFieldsContent } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport firebase from 'firebase/app';\r\nimport './todos-modal-content.css';\r\n\r\ninterface TodosModalProps {\r\n  selectedItemId: Id | false;\r\n  onEdited?: (fieldsContent: IFieldsContent) => void;\r\n  onAdded: (fieldsContent: IFieldsContent) => void;\r\n  onToggleModal: (evt: any) => void;\r\n}\r\n\r\nconst TodosModalContent: React.FC<TodosModalProps> = ({\r\n  selectedItemId,\r\n  onEdited,\r\n  onAdded,\r\n  onToggleModal,\r\n}) => {\r\n  const { currentUser } = useAppContext();\r\n  const currentDate: Date = new Date();\r\n  const currentMonth: number = currentDate.getMonth() + 1;\r\n  const currentDay: number = currentDate.getDate();\r\n  const formattedDate: string = `${currentDate.getFullYear()}-${\r\n    String(currentMonth).length == 2 ? currentMonth : '0' + currentMonth\r\n  }-${String(currentDay).length == 2 ? currentDay : '0' + currentDay}`;\r\n\r\n  const [state, setState] = useState<IFieldsContent>({\r\n    description: '',\r\n    priority: 'Low',\r\n    status: 'New',\r\n    endDatePlan: formattedDate,\r\n    endDateActual: '-',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n      todosRef\r\n        .once('value')\r\n        .then((snapshot) => {\r\n          snapshot.forEach((childSnapshot) => {\r\n            const childData = childSnapshot.val();\r\n            if (childData.id === selectedItemId) {\r\n              setState({\r\n                ...childData.fieldsContent,\r\n              });\r\n\r\n              return true;\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Couldn't take the data from DB: \" + error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const onDescriptionChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        description: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onPriorityChange = (evt: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        priority: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onStatusChange = (evt: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    if (evt.target.value == 'Done') {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          endDateActual: formattedDate,\r\n        };\r\n      });\r\n    } else {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          endDateActual: '-',\r\n        };\r\n      });\r\n    }\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        status: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onEndDatePlanChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        endDatePlan: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    if (selectedItemId) {\r\n      onEdited!(state);\r\n    } else {\r\n      onAdded(state);\r\n    }\r\n\r\n    onToggleModal(evt);\r\n  };\r\n\r\n  const { description, priority, status, endDatePlan } = state;\r\n\r\n  return (\r\n    <form className=\"todos-form\" onSubmit={onSubmit}>\r\n      <label htmlFor=\"description\">Description (*): </label>\r\n      <input\r\n        className=\"todos-form__description-field\"\r\n        id=\"description\"\r\n        type=\"text\"\r\n        name=\"description\"\r\n        onChange={onDescriptionChange}\r\n        placeholder=\"What must be to do?\"\r\n        value={description}\r\n        required\r\n      />\r\n      <div className=\"todos-form__select-wrapper flex-wrapper flex-wrapper--jsb\">\r\n        <div className=\"todos-form__priority-wrapper\">\r\n          <span className=\"todos-form__label-for-select\">Priority:</span>\r\n          <select\r\n            className=\"todos-form__select\"\r\n            name=\"priority\"\r\n            onChange={onPriorityChange}\r\n            value={priority}\r\n          >\r\n            <option value=\"Low\">Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"todos-form__status-wrapper\">\r\n          <span className=\"todos-form__label-for-select\">Status: </span>\r\n          <select\r\n            className=\"todos-form__select\"\r\n            disabled={!selectedItemId}\r\n            name=\"status\"\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          >\r\n            <option value=\"New\">New</option>\r\n            <option value=\"In process\">In process</option>\r\n            <option value=\"Done\">Done</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <label htmlFor=\"calendar\">End Date: </label>\r\n      <input\r\n        className=\"todos-form__calendar\"\r\n        id=\"calendar\"\r\n        type=\"date\"\r\n        name=\"calendar\"\r\n        onChange={onEndDatePlanChange}\r\n        value={endDatePlan}\r\n      />\r\n\r\n      <button className=\"todos-form__submit\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodosModalContent;\r\n","import Modal from './modal';\r\nexport default Modal;\r\n","import React, { ReactNode } from 'react';\r\nimport './modal.css';\r\n\r\ninterface IModal {\r\n  classes: string;\r\n  title: string;\r\n  onCloseBtnClick?: (evt: any) => void;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Modal: React.FC<IModal> = ({ classes, title, onCloseBtnClick, children }) => (\r\n  <section className={`modal ${classes}`}>\r\n    <h2 className=\"modal__title\">{title}</h2>\r\n    {onCloseBtnClick && (\r\n      <button className=\"modal__close\" onClick={onCloseBtnClick}>\r\n        X\r\n      </button>\r\n    )}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/page-title';\r\nimport SearchPanel from './components/search-panel';\r\nimport TodosTable from './components/todos-table';\r\nimport StatusFilter from './components/status-filter';\r\nimport Portal from '../../components/portal';\r\nimport TodosModalContent from './components/todos-modal-content';\r\nimport Modal from '../../components/modal';\r\nimport { useAppContext } from '../../context';\r\nimport firebase from 'firebase/app';\r\nimport { IFieldsContent, ITodoItem, IEveryStatusCount } from '../../interfaces';\r\nimport { Id } from '../../types';\r\n\r\ninterface ITodosData {\r\n  [key: string]: ITodoItem;\r\n}\r\n\r\ninterface ITodosPageState {\r\n  todosData?: ITodosData;\r\n  term: string;\r\n  filter: string;\r\n  showModal: boolean;\r\n  selectedItemId: Id | false;\r\n  isDataLoaded: boolean;\r\n}\r\n\r\nconst TodosPage: React.FC = () => {\r\n  const { currentUser } = useAppContext();\r\n  // console.log('Компонент монтируется или обновляется');\r\n  const [state, setState] = useState<ITodosPageState>({\r\n    term: '',\r\n    filter: 'all',\r\n    showModal: false,\r\n    selectedItemId: false,\r\n    isDataLoaded: false,\r\n  });\r\n  // console.log(state);\r\n  useEffect(() => {\r\n    //Обернуть в try catch?\r\n    const getTodos = (elem: firebase.database.DataSnapshot) => {\r\n      // console.log('Данные из бд подтягиваются');\r\n      setState(({ isDataLoaded, ...restParams }) => {\r\n        return {\r\n          isDataLoaded: true,\r\n          ...restParams,\r\n          todosData: elem.val(),\r\n        };\r\n      });\r\n    };\r\n    const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n    todosRef.on('value', getTodos);\r\n\r\n    return () => {\r\n      todosRef.off('value', getTodos);\r\n    };\r\n  }, []);\r\n\r\n  if (state.isDataLoaded) {\r\n    let newItemId: Id = 100;\r\n\r\n    const createTodoItem = (fieldsContent: IFieldsContent): ITodoItem => {\r\n      return {\r\n        fieldsContent,\r\n        id: newItemId,\r\n      };\r\n    };\r\n\r\n    const addItem = (fieldsContent: IFieldsContent): void => {\r\n      const newItem: ITodoItem = createTodoItem({\r\n        ...fieldsContent,\r\n      });\r\n\r\n      const db = firebase.database();\r\n      db.ref('users/' + currentUser.uid + '/todos')\r\n        .push(newItem)\r\n        .catch((e) => {\r\n          console.log(`Add item failed: ${e.message}`);\r\n        });\r\n    };\r\n\r\n    // evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement> | React.MouseEvent<HTMLTableRowElement>\r\n    // Сделать отдельную функцию на закрытие окна?\r\n    const toggleModal = (evt: any): void => {\r\n      if (evt.target.textContent == 'X') {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: false,\r\n          };\r\n        });\r\n      }\r\n\r\n      setState(({ showModal, ...restParams }) => {\r\n        return {\r\n          ...restParams,\r\n          showModal: !showModal,\r\n        };\r\n      });\r\n    };\r\n\r\n    if (state.todosData) {\r\n      let lastItemId: Id = 100;\r\n\r\n      Object.values(state.todosData).forEach((item) => {\r\n        if (item.id > lastItemId) {\r\n          lastItemId = item.id;\r\n        }\r\n      });\r\n      newItemId = lastItemId + 1;\r\n\r\n      const deleteItem = (id: Id): void => {\r\n        const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n        todosRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === id) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/todos/${childSnapshot.key}`)\r\n                  .remove()\r\n                  .catch((error) => {\r\n                    //Нужно уведомить пользователя, что удаление не прошло успешно\r\n                    console.log('Remove failed: ' + error.message);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Couldn't take the data from DB: \" + error);\r\n          });\r\n      };\r\n\r\n      const editItem = (fieldsContent: IFieldsContent): void => {\r\n        const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n        todosRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === state.selectedItemId) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/todos/${childSnapshot.key}/fieldsContent`)\r\n                  .set({ ...fieldsContent })\r\n                  .catch((error) => {\r\n                    //Нужно уведомить пользователя, что редактирование не прошло успешно\r\n                    console.log('Edit item failed: ' + error.message);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Couldn't take the data from DB: \" + error);\r\n          });\r\n\r\n        setState(({ selectedItemId, ...restParams }) => {\r\n          return {\r\n            selectedItemId: false,\r\n            ...restParams,\r\n          };\r\n        });\r\n      };\r\n\r\n      const search = (items: ITodoItem[], term: string): ITodoItem[] => {\r\n        if (term.length === 0) {\r\n          return items;\r\n        }\r\n        return items.filter((item) => {\r\n          return item.fieldsContent.description.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n      };\r\n\r\n      const onSearchChange = (term: string): void => {\r\n        //Для единообразия можно деструктуризировать стейт во всех подобных случаях. Это еще и безопасней\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            term,\r\n          };\r\n        });\r\n      };\r\n\r\n      const filterItem = (items: ITodoItem[], filter: string): ITodoItem[] => {\r\n        switch (filter) {\r\n          case 'all':\r\n            return items;\r\n          case 'new':\r\n            return items.filter((item) => item.fieldsContent.status == 'New');\r\n          case 'inProgress':\r\n            return items.filter((item) => item.fieldsContent.status == 'In process');\r\n          case 'done':\r\n            return items.filter((item) => item.fieldsContent.status == 'Done');\r\n\r\n          default:\r\n            return items;\r\n        }\r\n      };\r\n\r\n      const onFilterChange = (filter: string): void => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            filter,\r\n          };\r\n        });\r\n      };\r\n\r\n      const selectItem = (evt: React.MouseEvent<HTMLTableRowElement>, id: Id): void => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: id,\r\n          };\r\n        });\r\n        //В дальнейшем нужно избавиться от передачи события\r\n        toggleModal(evt);\r\n      };\r\n\r\n      const { todosData, term, filter, showModal, selectedItemId } = state;\r\n\r\n      const visibleItems: ITodoItem[] = filterItem(search(Object.values(todosData), term), filter);\r\n\r\n      const everyStatusCount: IEveryStatusCount = {\r\n        all: Object.values(todosData).length,\r\n        new: Object.values(todosData).filter((item) => item.fieldsContent.status == 'New').length,\r\n        inProgress: Object.values(todosData).filter(\r\n          (item) => item.fieldsContent.status == 'In process'\r\n        ).length,\r\n        done: Object.values(todosData).filter((item) => item.fieldsContent.status == 'Done').length,\r\n      };\r\n\r\n      return (\r\n        <main className=\"todos-page\">\r\n          <div className=\"container\">\r\n            <PageTitle text=\"Todo List\" />\r\n            <div className=\"flex-wrapper\">\r\n              <button className=\"modal-toggle-button\" onClick={toggleModal}>\r\n                Add task\r\n              </button>\r\n              <SearchPanel onSearchChange={onSearchChange} />\r\n              <StatusFilter\r\n                filter={filter}\r\n                onFilterChange={onFilterChange}\r\n                everyStatusCount={everyStatusCount}\r\n              />\r\n            </div>\r\n\r\n            <TodosTable todos={visibleItems} onDeleted={deleteItem} onSelected={selectItem} />\r\n\r\n            {showModal && (\r\n              <Portal>\r\n                <Modal\r\n                  classes=\"modal--todos\"\r\n                  title={selectedItemId ? 'Edit task' : 'Add task'}\r\n                  onCloseBtnClick={toggleModal}\r\n                >\r\n                  <TodosModalContent\r\n                    onAdded={addItem}\r\n                    onEdited={editItem}\r\n                    onToggleModal={toggleModal}\r\n                    selectedItemId={selectedItemId}\r\n                  />\r\n                </Modal>\r\n              </Portal>\r\n            )}\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <main className=\"todos-page\">\r\n        <div className=\"container\">\r\n          <PageTitle text=\"Todo List\" />\r\n          <div className=\"flex-wrapper\">\r\n            <button className=\"modal-toggle-button\" onClick={toggleModal}>\r\n              Add task\r\n            </button>\r\n          </div>\r\n\r\n          <TodosTable overlayText=\"You can sleep soundly\" />\r\n\r\n          {state.showModal && (\r\n            <Portal>\r\n              <Modal classes=\"modal--todos\" title=\"Add task\" onCloseBtnClick={toggleModal}>\r\n                <TodosModalContent\r\n                  onAdded={addItem}\r\n                  selectedItemId={false}\r\n                  onToggleModal={toggleModal}\r\n                />\r\n              </Modal>\r\n            </Portal>\r\n          )}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"todos-page\">\r\n      <div className=\"container\">\r\n        <PageTitle text=\"Todo List\" />\r\n        <span>Loading...</span>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodosPage;\r\n","import NoteItemContent from './note-item-content';\r\nexport default NoteItemContent;\r\n","import React from 'react';\r\nimport { Id } from '../../../../types';\r\nimport './note-item-content.css';\r\n\r\ninterface NoteItemContentProps {\r\n  creationDate: string;\r\n  description: string;\r\n  onDeleted: () => any;\r\n  // onDeleted: () => (id: Id) => void\r\n}\r\n\r\nconst NoteItemContent: React.FC<NoteItemContentProps> = ({\r\n  creationDate,\r\n  description,\r\n  onDeleted,\r\n}) => (\r\n  <>\r\n    <div className=\"note__header\">\r\n      <span>{creationDate}</span>\r\n      <button type=\"button\" className=\"btn note__btn note__btn--del\" onClick={onDeleted}>\r\n        Удалить\r\n      </button>\r\n    </div>\r\n    <p className=\"note__description\">{description}</p>\r\n  </>\r\n);\r\n\r\nexport default NoteItemContent;\r\n","import NotesList from './notes-list';\r\nexport default NotesList;\r\n","import React from 'react';\r\n\r\nimport NoteItemContent from '../note-item-content';\r\nimport { INoteItem } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport './notes-list.css';\r\n\r\ninterface NotesListProps {\r\n  notes?: INoteItem[];\r\n  onDeleted?: (id: Id) => void;\r\n  onSelected?: (evt: React.MouseEvent<HTMLLIElement>, id: Id) => void;\r\n  overlayText?: string;\r\n}\r\n\r\nconst NotesList: React.FC<NotesListProps> = ({ notes, onDeleted, onSelected, overlayText }) => {\r\n  if (notes && onDeleted && onSelected) {\r\n    const itemsList: JSX.Element[] = notes.map(\r\n      (item: INoteItem): JSX.Element => {\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n          <li className=\"list__item\" key={id} onDoubleClick={(evt) => onSelected(evt, id)}>\r\n            <NoteItemContent {...itemProps} onDeleted={() => onDeleted(id)} />\r\n          </li>\r\n        );\r\n      }\r\n    );\r\n\r\n    return <ul className=\"list list--notes\">{itemsList}</ul>;\r\n  }\r\n  return (\r\n    <>\r\n      <ul className=\"list list--notes\"></ul>\r\n      <span>{overlayText}</span>\r\n    </>\r\n  );\r\n};\r\nexport default NotesList;\r\n","import NotesModalContent from './notes-modal-content';\r\nexport default NotesModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAppContext } from '../../../../context';\r\nimport { Id } from '../../../../types';\r\nimport firebase from 'firebase/app';\r\nimport './notes-modal-content.css';\r\n\r\ninterface NotesModalProps {\r\n  selectedItemId: Id | false;\r\n  onEdited?: (description: string) => void;\r\n  onAdded: (description: string) => void;\r\n  onToggleModal: (evt: any) => void;\r\n}\r\n\r\nconst NotesModalContent: React.FC<NotesModalProps> = ({\r\n  selectedItemId,\r\n  onEdited,\r\n  onAdded,\r\n  onToggleModal,\r\n}) => {\r\n  const { currentUser } = useAppContext();\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n      notesRef\r\n        .once('value')\r\n        .then((snapshot) => {\r\n          snapshot.forEach((childSnapshot) => {\r\n            const childData = childSnapshot.val();\r\n            if (childData.id === selectedItemId) {\r\n              setDescription(childData.description);\r\n\r\n              return true;\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Couldn't take the data from DB: \" + error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const onDescriptionChange = (evt: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setDescription(evt.target.value);\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    if (selectedItemId) {\r\n      onEdited!(description);\r\n    } else {\r\n      onAdded(description);\r\n    }\r\n\r\n    onToggleModal(evt);\r\n  };\r\n\r\n  return (\r\n    <form className=\"notes-form\" onSubmit={onSubmit}>\r\n      <label htmlFor=\"description\">Description (*): </label>\r\n      <textarea\r\n        className=\"notes-form__description-field\"\r\n        id=\"description\"\r\n        name=\"description\"\r\n        onChange={onDescriptionChange}\r\n        placeholder=\"Type something:)\"\r\n        value={description}\r\n        required\r\n      />\r\n\r\n      <button className=\"notes-form__submit\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NotesModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/page-title';\r\nimport NotesList from './components/notes-list';\r\nimport Portal from '../../components/portal';\r\nimport NotesModalContent from './components/notes-modal-content';\r\nimport Modal from '../../components/modal';\r\nimport { useAppContext } from '../../context';\r\nimport firebase from 'firebase/app';\r\nimport { INoteItem } from '../../interfaces';\r\nimport { Id } from '../../types';\r\n\r\ninterface INotesData {\r\n  [key: string]: INoteItem;\r\n}\r\n\r\ninterface INotesPageState {\r\n  notesData?: INotesData;\r\n  showModal: boolean;\r\n  selectedItemId: Id | false;\r\n  isDataLoaded: boolean;\r\n}\r\n\r\nconst NotesPage: React.FC = () => {\r\n  const { currentUser } = useAppContext();\r\n  // console.log('Компонент монтируется или обновляется');\r\n  const [state, setState] = useState<INotesPageState>({\r\n    showModal: false,\r\n    selectedItemId: false,\r\n    isDataLoaded: false,\r\n  });\r\n  // console.log(state);\r\n  useEffect(() => {\r\n    //Обернуть в try catch?\r\n    const getNotes = (elem: firebase.database.DataSnapshot) => {\r\n      // console.log('Данные из бд подтягиваются');\r\n      setState(({ isDataLoaded, ...restParams }) => {\r\n        return {\r\n          isDataLoaded: true,\r\n          ...restParams,\r\n          notesData: elem.val(),\r\n        };\r\n      });\r\n    };\r\n    const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n    notesRef.on('value', getNotes);\r\n\r\n    return () => {\r\n      notesRef.off('value', getNotes);\r\n    };\r\n  }, []);\r\n\r\n  if (state.isDataLoaded) {\r\n    let newItemId: Id = 100;\r\n\r\n    const createNoteItem = (description: string): INoteItem => {\r\n      return {\r\n        description,\r\n        creationDate: getCurrentFormattedDate(),\r\n        id: newItemId,\r\n      };\r\n    };\r\n\r\n    const addItem = (description: string): void => {\r\n      const newItem: INoteItem = createNoteItem(description);\r\n\r\n      firebase\r\n        .database()\r\n        .ref('users/' + currentUser.uid + '/notes')\r\n        .push(newItem)\r\n        .catch((e) => {\r\n          console.log(`Add item failed: ${e.message}`);\r\n        });\r\n    };\r\n\r\n    const getCurrentFormattedDate = (): string => {\r\n      const currentDate: Date = new Date();\r\n      const currentMonth: number = currentDate.getMonth() + 1;\r\n      const currentDay: number = currentDate.getDate();\r\n\r\n      return `${String(currentDay).length == 2 ? currentDay : '0' + currentDay}.${\r\n        String(currentMonth).length == 2 ? currentMonth : '0' + currentMonth\r\n      }.${currentDate.getFullYear()}`;\r\n    };\r\n\r\n    // evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>\r\n    // Сделать отдельную функцию на закрытие окна?\r\n    const toggleModal = (evt: any): void => {\r\n      if (evt.target.textContent == 'X') {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: false,\r\n          };\r\n        });\r\n      }\r\n\r\n      setState(({ showModal, ...restParams }) => {\r\n        return {\r\n          ...restParams,\r\n          showModal: !showModal,\r\n        };\r\n      });\r\n    };\r\n\r\n    if (state.notesData) {\r\n      let lastItemId: Id = 100;\r\n\r\n      Object.values(state.notesData).forEach((item) => {\r\n        if (item.id > lastItemId) {\r\n          lastItemId = item.id;\r\n        }\r\n      });\r\n      newItemId = lastItemId + 1;\r\n\r\n      const deleteItem = (id: Id): void => {\r\n        const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n        notesRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === id) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/notes/${childSnapshot.key}`)\r\n                  .remove()\r\n                  .catch((error) => {\r\n                    //Нужно уведомить пользователя, что удаление не прошло успешно\r\n                    console.log('Remove failed: ' + error.message);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Couldn't take the data from DB: \" + error);\r\n          });\r\n      };\r\n\r\n      const editItem = (description: string): void => {\r\n        const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n        notesRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === state.selectedItemId) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/notes/${childSnapshot.key}/description`)\r\n                  .set(description)\r\n                  .catch((error) => {\r\n                    //Нужно уведомить пользователя, что редактирование не прошло успешно\r\n                    console.log('Edit item failed: ' + error.message);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Couldn't take the data from DB: \" + error);\r\n          });\r\n\r\n        setState(({ selectedItemId, ...restParams }) => {\r\n          return {\r\n            selectedItemId: false,\r\n            ...restParams,\r\n          };\r\n        });\r\n      };\r\n\r\n      const selectItem = (evt: React.MouseEvent<HTMLLIElement>, id: Id): void => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: id,\r\n          };\r\n        });\r\n        //В дальнейшем нужно избавиться от передачи события\r\n        toggleModal(evt);\r\n      };\r\n\r\n      const { notesData, showModal, selectedItemId } = state;\r\n\r\n      return (\r\n        <main className=\"notes-page\">\r\n          <div className=\"container\">\r\n            <PageTitle text=\"Notes\" />\r\n            <button className=\"modal-toggle-button\" onClick={toggleModal}>\r\n              Add note\r\n            </button>\r\n            <NotesList\r\n              notes={Object.values(notesData)}\r\n              onDeleted={deleteItem}\r\n              onSelected={selectItem}\r\n            />\r\n            {showModal && (\r\n              <Portal>\r\n                <Modal\r\n                  classes=\"modal--notes\"\r\n                  title={selectedItemId ? 'Edit note' : 'Add note'}\r\n                  onCloseBtnClick={toggleModal}\r\n                >\r\n                  <NotesModalContent\r\n                    onAdded={addItem}\r\n                    onEdited={editItem}\r\n                    onToggleModal={toggleModal}\r\n                    selectedItemId={selectedItemId}\r\n                  />\r\n                </Modal>\r\n              </Portal>\r\n            )}\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <main className=\"notes-page\">\r\n        <div className=\"container\">\r\n          <PageTitle text=\"Notes\" />\r\n          <button className=\"modal-toggle-button\" onClick={toggleModal}>\r\n            Add note\r\n          </button>\r\n          <NotesList overlayText=\"You can sleep soundly\" />\r\n          {state.showModal && (\r\n            <Portal>\r\n              <Modal classes=\"modal--notes\" title=\"Add note\" onCloseBtnClick={toggleModal}>\r\n                <NotesModalContent\r\n                  onAdded={addItem}\r\n                  onToggleModal={toggleModal}\r\n                  selectedItemId={false}\r\n                />\r\n              </Modal>\r\n            </Portal>\r\n          )}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"notes-page\">\r\n      <div className=\"container\">\r\n        <PageTitle text=\"Notes\" />\r\n        <span>Loading...</span>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotesPage;\r\n","import ChangeEmailModalContent from './change-email-modal-content';\r\nexport default ChangeEmailModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport './change-email-modal-content.css';\r\n\r\ninterface ChangeEmailModalProps {\r\n  onToggleModal: (evt: any) => void;\r\n  user: any;\r\n  actionCodeSettings: any;\r\n}\r\ninterface IConfirmCredentials {\r\n  oldEmail: string;\r\n  password: string;\r\n}\r\n\r\nconst ChangeEmailModalContent: React.FC<ChangeEmailModalProps> = ({\r\n  onToggleModal,\r\n  user,\r\n  actionCodeSettings,\r\n}) => {\r\n  const [credentials, setCredentials] = useState<IConfirmCredentials>({\r\n    oldEmail: user.email,\r\n    password: '',\r\n  });\r\n  const [email, setEmail] = useState(user.email);\r\n  const [isFirstModal, setIsFirstModal] = useState(true);\r\n\r\n  const onCredentialsChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n\r\n    setCredentials((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onEmailChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const onConfirmCredentials = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { oldEmail, password } = credentials;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(oldEmail, password);\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        setIsFirstModal(false);\r\n      })\r\n      .catch((error: any) => {\r\n        console.log('Не удалось сделать reauth', error);\r\n      });\r\n  };\r\n  const onSetNewEmail = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    user\r\n      .verifyBeforeUpdateEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        // @todo Здесь я должен показывать ползователю тултип, что он должен подтвердить свой емейл, чтобы закончить его изменение\r\n        console.log('Confirm your new email to finish change the email');\r\n        onToggleModal(evt);\r\n      })\r\n      .catch(function (err: any) {\r\n        console.log('Не удалось обновить email.', err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"change-email-form\"\r\n      onSubmit={isFirstModal ? onConfirmCredentials : onSetNewEmail}\r\n    >\r\n      {isFirstModal ? (\r\n        <>\r\n          <label htmlFor=\"oldEmail\">Old email (*): </label>\r\n          <input\r\n            className=\"change-email-form__old-email-field\"\r\n            id=\"oldEmail\"\r\n            type=\"email\"\r\n            placeholder=\"Enter you old email\"\r\n            onChange={onCredentialsChange}\r\n            value={credentials.oldEmail}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password (*): </label>\r\n          <input\r\n            className=\"change-email-form__password-field\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter you password\"\r\n            onChange={onCredentialsChange}\r\n            value={credentials.password}\r\n            required\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <label htmlFor=\"newEmail\">New email (*): </label>\r\n          <input\r\n            className=\"change-email-form__new-email-field\"\r\n            id=\"newEmail\"\r\n            type=\"email\"\r\n            placeholder=\"Enter new email\"\r\n            onChange={onEmailChange}\r\n            value={email}\r\n            required\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <button className=\"change-email-form__submit\">{isFirstModal ? 'Continue' : 'Save'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangeEmailModalContent;\r\n","import ChangePasswordModalContent from './change-password-modal-content';\r\nexport default ChangePasswordModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport './change-password-modal-content.css';\r\n\r\ninterface ChangePasswordModalProps {\r\n  onToggleModal: (evt: any) => void;\r\n  user: any;\r\n}\r\ninterface IConfirmCredentials {\r\n  email: string;\r\n  oldPassword: string;\r\n}\r\n\r\nconst ChangePasswordModalContent: React.FC<ChangePasswordModalProps> = ({\r\n  onToggleModal,\r\n  user,\r\n}) => {\r\n  const [credentials, setCredentials] = useState<IConfirmCredentials>({\r\n    email: user.email,\r\n    oldPassword: '',\r\n  });\r\n  const [isFirstModal, setIsFirstModal] = useState(true);\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onCredentialsChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n\r\n    setCredentials((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onPasswordChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(evt.target.value);\r\n  };\r\n\r\n  const onConfirmCredentials = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { email, oldPassword } = credentials;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(email, oldPassword);\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        setIsFirstModal(false);\r\n      })\r\n      .catch((error: any) => {\r\n        console.log('Не удалось сделать reauth', error);\r\n      });\r\n  };\r\n\r\n  const onSetNewPassword = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    // @todo Вылозит предупреждение от гугл, что в результате утечки даннных, пароль оказался раскрыт. Скорее всего связано с отсутствием шифрования с моей стороны\r\n    user\r\n      .updatePassword(password)\r\n      .then(() => {\r\n        console.log('Ты успешно обновил пароль!');\r\n        onToggleModal(evt);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('Не получилось обновить пароль...', err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"change-password-form\"\r\n      onSubmit={isFirstModal ? onConfirmCredentials : onSetNewPassword}\r\n    >\r\n      {isFirstModal ? (\r\n        <>\r\n          <label htmlFor=\"email\">Email (*): </label>\r\n          <input\r\n            className=\"change-password-form__email-field\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter you email\"\r\n            onChange={onCredentialsChange}\r\n            value={credentials.email}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"oldPassword\">Old password (*): </label>\r\n          <input\r\n            className=\"change-password-form__old-password-field\"\r\n            id=\"oldPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Enter you old password\"\r\n            onChange={onCredentialsChange}\r\n            value={credentials.oldPassword}\r\n            required\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <label htmlFor=\"newPassword\">New password (*): </label>\r\n          <input\r\n            className=\"change-password-form__new-password-field\"\r\n            id=\"newPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            required\r\n          />\r\n          {/* @todo можно реализовать генерацию рандомного пароля\r\n          <button className=\"change-password-form__generate-password\" onClick={onGeneratePassword}>\r\n            Generate password\r\n          </button> */}\r\n        </>\r\n      )}\r\n\r\n      <button className=\"change-password-form__submit\">{isFirstModal ? 'Continue' : 'Save'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordModalContent;\r\n","import DeleteAccountModalContent from './delete-account-modal-content';\r\nexport default DeleteAccountModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport './delete-account-modal-content.css';\r\n\r\ninterface ChangeAccountDeleteModalProps {\r\n  onToggleModal: (evt: any) => void;\r\n  user: any;\r\n}\r\ninterface IConfirmCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst ChangeAccountDeleteModalContent: React.FC<ChangeAccountDeleteModalProps> = ({\r\n  onToggleModal,\r\n  user,\r\n}) => {\r\n  const [credentials, setCredentials] = useState<IConfirmCredentials>({\r\n    email: user.email,\r\n    password: '',\r\n  });\r\n  const [isFirstModal, setIsFirstModal] = useState(true);\r\n\r\n  const onCredentialsChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n\r\n    setCredentials((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onConfirmCredentials = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { email, password } = credentials;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(email, password);\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        setIsFirstModal(false);\r\n      })\r\n      .catch((error: any) => {\r\n        console.log('Не удалось сделать reauth', error);\r\n      });\r\n  };\r\n\r\n  const onDeleteAccount = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    user.delete().catch((err: any) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const onCancelDeleteAccount = (evt: React.MouseEvent<HTMLButtonElement>): void => {\r\n    onToggleModal(evt);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"delete-account-form\"\r\n      onSubmit={isFirstModal ? onConfirmCredentials : onDeleteAccount}\r\n    >\r\n      {isFirstModal ? (\r\n        <>\r\n          <label htmlFor=\"email\">Email (*): </label>\r\n          <input\r\n            className=\"delete-account-form__email-field\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter you email\"\r\n            onChange={onCredentialsChange}\r\n            value={credentials.email}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password (*): </label>\r\n          <input\r\n            className=\"delete-account-form__password-field\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter you password\"\r\n            onChange={onCredentialsChange}\r\n            value={credentials.password}\r\n            required\r\n          />\r\n          <button className=\"delete-account-form__submit\">Continue</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span>Do you sure want to delete your account? This action is irreversibly...</span>\r\n          <div className=\"delete-account-form__bnt-wrapper\">\r\n            <button className=\"delete-account-form__agree\" type=\"submit\">\r\n              Yes\r\n            </button>\r\n            <button\r\n              className=\"delete-account-form__disagree\"\r\n              type=\"button\"\r\n              onClick={onCancelDeleteAccount}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangeAccountDeleteModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/page-title';\r\nimport Portal from '../../components/portal';\r\nimport Modal from '../../components/modal';\r\nimport { useAppContext } from '../../context';\r\nimport firebase from 'firebase/app';\r\nimport ChangeEmailModalContent from './components/change-email-modal-content';\r\nimport ChangePasswordModalContent from './components/change-password-modal-content';\r\nimport DeleteAccountModalContent from './components/delete-account-modal-content';\r\nimport './index.css';\r\n\r\n// @todo Рефакторинг компонента + привести к единому виду названия функций, переменных из useState\r\nconst SettingsPage: React.FC = () => {\r\n  const { currentUser, actionCodeSettings } = useAppContext();\r\n\r\n  const [name, setName] = useState(currentUser.displayName);\r\n  const [photoUrl, setPhotoUrl] = useState(currentUser.photoURL);\r\n  const [isNameClicked, setIsNameClicked] = useState(false);\r\n  const [isAvatarClicked, setIsAvatarClicked] = useState(false);\r\n  const [showModalEmailChange, setShowModalEmailChange] = useState(false);\r\n  const [showModalPasswordChange, setShowModalPasswordChange] = useState(false);\r\n  const [showModalAccountDelete, setShowModalAccountDelete] = useState(false);\r\n\r\n  const isGoogleUser = currentUser.providerData[0].providerId == 'google.com' ? true : false;\r\n  const email = currentUser.email;\r\n\r\n  //Смена имени\r\n  const onNameClick = (): void => {\r\n    setIsNameClicked(true);\r\n  };\r\n\r\n  const onNameSave = (): void => {\r\n    currentUser\r\n      .updateProfile({\r\n        displayName: name,\r\n      })\r\n      .then(() => setIsNameClicked(false))\r\n      .catch((err: any) => {\r\n        console.log('Не удалось обновить имя пользователя', err.message);\r\n      });\r\n  };\r\n  const onNameCancel = (): void => {\r\n    setName(currentUser.displayName);\r\n    setIsNameClicked(false);\r\n  };\r\n\r\n  //Смена фото\r\n  const onAvatarClick = (): void => {\r\n    setIsAvatarClicked(true);\r\n  };\r\n  const onPhotoUrlSave = (): void => {\r\n    currentUser\r\n      .updateProfile({\r\n        photoURL: photoUrl,\r\n      })\r\n      .then(() => setIsAvatarClicked(false))\r\n      .catch((err: any) => {\r\n        console.log('Не удалось обновить аватар пользователя', err.message);\r\n      });\r\n  };\r\n  const onPhotoUrlCancel = (): void => {\r\n    setPhotoUrl(currentUser.photoURL);\r\n    setIsAvatarClicked(false);\r\n  };\r\n\r\n  // Сброс пароля\r\n  const onEmailForResetPasswordSend = (): void => {\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        // @todo Всплывает тултип с просьбой проверить почту\r\n      })\r\n      .catch((err) => {\r\n        console.log('Не удалось отправить email:(', err.message);\r\n      });\r\n  };\r\n\r\n  // @todo Сделать один хендлер с swith case?\r\n  const onNameChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setName(evt.target.value);\r\n  };\r\n  const onPhotoUrlChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setPhotoUrl(evt.target.value);\r\n  };\r\n\r\n  // Тоггл модалок\r\n  const toggleEmailChangeModal = (\r\n    evt:\r\n      | React.FormEvent<HTMLFormElement>\r\n      | React.MouseEvent<HTMLButtonElement>\r\n      | React.FormEvent<HTMLSpanElement>\r\n  ): void => {\r\n    setShowModalEmailChange((prev) => !prev);\r\n  };\r\n\r\n  const togglePasswordChangeModal = (\r\n    evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>\r\n  ): void => {\r\n    setShowModalPasswordChange((prev) => !prev);\r\n  };\r\n\r\n  const toggleAccountDeleteModal = (\r\n    evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>\r\n  ): void => {\r\n    setShowModalAccountDelete((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <main className=\"settings-page\">\r\n      <div className=\"container\">\r\n        <PageTitle text=\"Settings\" />\r\n        <span className=\"settings-page__subtitle\">Account</span>\r\n\r\n        <div className=\"settings-wrapper\">\r\n          <div className=\"settings-item settings-item__avatar-wrapper\">\r\n            <img\r\n              className=\"settings-item__avatar\"\r\n              src={\r\n                photoUrl\r\n                  ? photoUrl\r\n                  : 'https://yt3.ggpht.com/ytc/AAUvwng-3d-BcGfaNN09TTsLOoFfVhCT96sjcPQeJzQ2iQ=s900-c-k-c0x00ffffff-no-rj'\r\n              }\r\n              onClick={onAvatarClick}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"User's avatar\"\r\n            />\r\n            {isAvatarClicked ? (\r\n              <>\r\n                {/* @todo Стоит сделать ref на инпут, чтобы бахать фокус сразу после его появления? */}\r\n                <input\r\n                  className=\"settings-item__field settings-item__field--avatar\"\r\n                  type=\"text\"\r\n                  name=\"avatar\"\r\n                  onChange={onPhotoUrlChange}\r\n                  placeholder=\"Type link on you avatar\"\r\n                  value={photoUrl ? photoUrl : ''}\r\n                />\r\n                <button className=\"settings-item__btn\" onClick={onPhotoUrlSave}>\r\n                  Save\r\n                </button>\r\n                <button className=\"settings-item__btn\" onClick={onPhotoUrlCancel}>\r\n                  Cancel\r\n                </button>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n\r\n          {isNameClicked ? (\r\n            <div className=\"settings-item\">\r\n              <input\r\n                className=\"settings-item__field settings-item__field--name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={onNameChange}\r\n                placeholder=\"What is your name?\"\r\n                value={name ? name : ''}\r\n              />\r\n              <button className=\"settings-item__btn\" onClick={onNameSave}>\r\n                Save\r\n              </button>\r\n              <button className=\"settings-item__btn\" onClick={onNameCancel}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"settings-item\">\r\n              <span className=\"settings-item__text\" onClick={onNameClick}>\r\n                {name ? name : 'Anonymous'}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"settings-item settings-item--email\">\r\n            <span onClick={isGoogleUser ? undefined : toggleEmailChangeModal}>Your email: </span>\r\n\r\n            <span\r\n              className={\r\n                isGoogleUser\r\n                  ? 'settings-item__text settings-item__text--unclickable'\r\n                  : 'settings-item__text'\r\n              }\r\n              onClick={isGoogleUser ? undefined : toggleEmailChangeModal}\r\n            >\r\n              {email}\r\n            </span>\r\n          </div>\r\n\r\n          {!isGoogleUser && (\r\n            <>\r\n              <div className=\"settings-item\">\r\n                <button className=\"settings-item__btn\" onClick={togglePasswordChangeModal}>\r\n                  Change password\r\n                </button>\r\n              </div>\r\n              <div className=\"settings-item\">\r\n                <button className=\"settings-item__btn\" onClick={onEmailForResetPasswordSend}>\r\n                  Send me email to reset the password\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className=\"settings-item\">\r\n            <button className=\"settings-item__btn\" onClick={toggleAccountDeleteModal}>\r\n              Delete account\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <span className=\"settings-page__subtitle\">App</span>\r\n        {/* @todo Здесь будет тогглер цветовой схемы сайта */}\r\n\r\n        {showModalEmailChange && (\r\n          <Portal>\r\n            <Modal\r\n              classes=\"modal--change-email\"\r\n              title=\"Changing the email\"\r\n              onCloseBtnClick={toggleEmailChangeModal}\r\n            >\r\n              <ChangeEmailModalContent\r\n                onToggleModal={toggleEmailChangeModal}\r\n                user={currentUser}\r\n                actionCodeSettings={actionCodeSettings}\r\n              />\r\n            </Modal>\r\n          </Portal>\r\n        )}\r\n        {showModalPasswordChange && (\r\n          <Portal>\r\n            <Modal\r\n              classes=\"modal--change-password\"\r\n              title=\"Changing the password\"\r\n              onCloseBtnClick={togglePasswordChangeModal}\r\n            >\r\n              <ChangePasswordModalContent\r\n                onToggleModal={togglePasswordChangeModal}\r\n                user={currentUser}\r\n              />\r\n            </Modal>\r\n          </Portal>\r\n        )}\r\n        {showModalAccountDelete && (\r\n          <Portal>\r\n            <Modal\r\n              classes=\"modal--delete-account\"\r\n              title=\"Deleting the account\"\r\n              onCloseBtnClick={toggleAccountDeleteModal}\r\n            >\r\n              <DeleteAccountModalContent\r\n                user={currentUser}\r\n                onToggleModal={toggleAccountDeleteModal}\r\n              />\r\n            </Modal>\r\n          </Portal>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import SignUpModalContent from './sign-up-modal-content';\r\nexport default SignUpModalContent;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTooltipContext } from '../../../../context';\r\nimport firebase from 'firebase/app';\r\n\r\nimport './sign-up-modal-content.css';\r\n\r\ninterface ISignUpModalContentState {\r\n  email: string;\r\n  password: string;\r\n  repeatPassword: string;\r\n}\r\n\r\nconst SignUpModalContent: React.FC = () => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [state, setState] = useState<ISignUpModalContentState>({\r\n    email: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n  });\r\n\r\n  const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    const { email, password, repeatPassword } = state;\r\n    if (password == repeatPassword) {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => localStorage.setItem('rememberMe', 'true'))\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      showTooltip(\"You password and repeated password don't match\");\r\n    }\r\n  };\r\n\r\n  const googleSignUp = (): void => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(() => localStorage.setItem('rememberMe', 'true'))\r\n      .catch((error) => {\r\n        showTooltip(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"sign-up-form\" onSubmit={onSubmit}>\r\n        <label htmlFor=\"email\">Email (*): </label>\r\n        <input\r\n          className=\"sign-up-form__email-field\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          onChange={onChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password (*): </label>\r\n        <input\r\n          className=\"sign-up-form__password-field\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Create a password\"\r\n          onChange={onChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"repeatPassword\">Repeat password (*): </label>\r\n        <input\r\n          className=\"sign-up-form__repeat-password-field\"\r\n          id=\"repeatPassword\"\r\n          type=\"password\"\r\n          name=\"repeat-password\"\r\n          placeholder=\"Repeat a password\"\r\n          onChange={onChange}\r\n          required\r\n        />\r\n\r\n        <button className=\"sign-up-form__submit\">Sign up</button>\r\n      </form>\r\n      {/* @todo Поменять ссылку на кнопку */}\r\n      <span className=\"modal--sign-up__sign-up-with-google\">\r\n        You can pass an alternative registration with Google.{' '}\r\n        <Link className=\"modal--sign-up__google-link\" to=\"#\" onClick={googleSignUp}>\r\n          Let's do it!\r\n        </Link>\r\n      </span>\r\n\r\n      <span className=\"modal--sign-up__go-to-sign-in\">\r\n        Already have an account?{' '}\r\n        <Link className=\"modal--sign-up__sign-in-link\" to=\"/sign-in\">\r\n          Sign in\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpModalContent;\r\n","import React from 'react';\r\nimport Modal from '../../components/modal';\r\nimport SignUpModalContent from './components/sign-up-modal-content';\r\n\r\nconst SignUpPage: React.FC = () => (\r\n  <main className=\"sign-up-page\">\r\n    <Modal classes=\"modal--sign-up\" title=\"Sign up\">\r\n      <SignUpModalContent />\r\n    </Modal>\r\n  </main>\r\n);\r\n\r\nexport default SignUpPage;\r\n","import SignInModalContent from './sign-in-modal-content';\r\nexport default SignInModalContent;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport { useTooltipContext } from '../../../../context';\r\nimport './sign-in-modal-content.css';\r\n\r\ninterface ISignInModalContentState {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignInModalContent: React.FC = () => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [state, setState] = useState<ISignInModalContentState>({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [isRememberMeChecked, setIsRememberMeChecked] = useState(\r\n    localStorage.getItem('rememberMe')\r\n  );\r\n\r\n  const onChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onRememberMeToggle = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    if (isRememberMeChecked) {\r\n      localStorage.removeItem('rememberMe');\r\n      setIsRememberMeChecked(null);\r\n    } else {\r\n      localStorage.setItem('rememberMe', 'true');\r\n      setIsRememberMeChecked('true');\r\n    }\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { email, password } = state;\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => showTooltip(err.message));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"sign-in-form\" onSubmit={onSubmit}>\r\n        <label htmlFor=\"email\">Email (*): </label>\r\n        <input\r\n          className=\"sign-in-form__email-field\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter you email\"\r\n          onChange={onChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password (*): </label>\r\n        <input\r\n          className=\"sign-in-form__password-field\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Enter you password\"\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"rememberMe\">Remember me </label>\r\n        <input\r\n          className=\"sign-up-form__remember-me-checkbox\"\r\n          id=\"rememberMe\"\r\n          type=\"checkbox\"\r\n          name=\"remember-me\"\r\n          onChange={onRememberMeToggle}\r\n          checked={isRememberMeChecked ? true : false}\r\n        />\r\n\r\n        <button className=\"sign-in-form__submit\">Sign in</button>\r\n      </form>\r\n      {/* @todo проставить ссылку */}\r\n      <Link className=\"modal--sign-in__google-link\" to=\"#\">\r\n        Sign in with Google\r\n      </Link>\r\n\r\n      <span className=\"modal--sign-in__go-to-reset\">\r\n        Forgot password?{' '}\r\n        <Link className=\"modal--sign-in__reset-link\" to=\"/reset-password\">\r\n          Reset\r\n        </Link>\r\n      </span>\r\n      <span className=\"modal--sign-in__go-to-sign-up\">\r\n        Return to{' '}\r\n        <Link className=\"modal--sign-in__sign-up-link\" to=\"/sign-up\">\r\n          Sign up\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInModalContent;\r\n","import React from 'react';\r\nimport Modal from '../../components/modal';\r\nimport SignInModalContent from './components/sign-in-modal-content';\r\n\r\nconst SignInPage: React.FC = () => (\r\n  <main className=\"sign-in-page\">\r\n    <Modal classes=\"modal--sign-in\" title=\"Sign in\">\r\n      <SignInModalContent />\r\n    </Modal>\r\n  </main>\r\n);\r\n\r\nexport default SignInPage;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport { useAppContext, useTooltipContext } from '../../../context/';\r\nimport './reset-password-modal-content.css';\r\n\r\nconst ResetPasswordModalContent: React.FC = () => {\r\n  const { actionCodeSettings } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @todo Должна быть валидация\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        // @todo Всплывает тултип с просьбой проверить почту\r\n      })\r\n      .catch((err) => {\r\n        showTooltip(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"reset-password-form\" onSubmit={onSubmit}>\r\n        <label htmlFor=\"email\">Email (*): </label>\r\n        <input\r\n          className=\"reset-password-form__email-field\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter you email\"\r\n          onChange={onChange}\r\n          value={email}\r\n          required\r\n        />\r\n\r\n        <button className=\"reset-password-form__submit\">Reset password</button>\r\n      </form>\r\n\r\n      <Link className=\"modal--reset-password__sign-in-link\" to=\"/sign-in\">\r\n        I remember :)\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordModalContent;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from '../../components/modal';\r\nimport ResetPasswordModalContent from './components/reset-password-modal-content';\r\n\r\nconst ResetPasswordPage: React.FC = () => (\r\n  <main className=\"reset-password-page\">\r\n    <Modal classes=\"modal--reset-password\" title=\"Reset password\">\r\n      <ResetPasswordModalContent />\r\n    </Modal>\r\n  </main>\r\n);\r\n\r\nexport default ResetPasswordPage;\r\n","import Header from \"./header\";\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\n\r\nimport './header.css';\r\n\r\nconst Header: React.FC = () => {\r\n  const signOut = (evt: React.MouseEvent<HTMLButtonElement>): void => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <header className=\"page-header\">\r\n      <div className=\"container flex-wrapper flex-wrapper--jsb\">\r\n        <nav className=\"main-nav\">\r\n          <Link to=\"/\">Doit!</Link>\r\n          <ul className=\"main-nav__list\">\r\n            <li className=\"main-nav__item\">\r\n              <Link to=\"/todo\">Todo</Link>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <Link to=\"/notes\">Notes</Link>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <button className=\"page-header__sign-out\" onClick={signOut}>\r\n          Sign out\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Tooltip from './tooltip';\r\nexport default Tooltip;\r\n","import React from 'react';\r\nimport { useTooltipContext } from '../../context';\r\nimport './tooltip.css';\r\n\r\nconst Tooltip: React.FC = () => {\r\n  const { message, isOpen, hideTooltip } = useTooltipContext();\r\n\r\n  return isOpen ? (\r\n    <div className=\"tooltip\">\r\n      <span className=\"tooltip__message\">{message}</span>\r\n      <button className=\"tooltip__close\" onClick={() => hideTooltip()}>\r\n        X\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default Tooltip;\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\r\nimport {\r\n  MainPage,\r\n  TodosPage,\r\n  NotesPage,\r\n  SettingsPage,\r\n  SignUpPage,\r\n  SignInPage,\r\n  ResetPasswordPage,\r\n} from '../pages';\r\nimport { useAppContext } from '../context';\r\nimport Header from '../components/header';\r\nimport Tooltip from '../components/tooltip';\r\n\r\nimport '../assets/css/normalize.css';\r\nimport './app.css';\r\nimport './scaffolding.css';\r\n\r\nconst App: React.FC = () => {\r\n  const { isLoggedIn, currentUser } = useAppContext();\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedIn ? (\r\n        <>\r\n          {currentUser.emailVerified ? (\r\n            <>\r\n              <Header />\r\n              <Tooltip />\r\n              <Route path=\"/\" render={() => <MainPage />} exact />\r\n              <Route path=\"/todo\" render={() => <TodosPage />} />\r\n              <Route path=\"/notes\" render={() => <NotesPage />} />\r\n              <Route path=\"/settings\" render={() => <SettingsPage />} />\r\n              <Redirect to=\"/\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Header />\r\n              <div className=\"app__overlay\">\r\n                <span className=\"app__confirm-message\">\r\n                  Please confirm your email to use the app\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Tooltip />\r\n          <Route path=\"/sign-up\" render={() => <SignUpPage />} />\r\n          <Route path=\"/sign-in\" render={() => <SignInPage />} />\r\n          <Route path=\"/reset-password\" render={() => <ResetPasswordPage />} />\r\n          <Redirect to=\"/sign-up\" />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\nimport { AppProvider, TooltipProvider } from './context';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\ninterface IFirebaseConfig {\r\n  apiKey: string;\r\n  authDomain: string;\r\n  databaseURL: string;\r\n  projectId: string;\r\n  storageBucket: string;\r\n  messagingSenderId: string;\r\n  appId: string;\r\n}\r\n\r\nconst firebaseConfig: IFirebaseConfig = {\r\n  apiKey: 'AIzaSyD4KDh3FaOBTHDF_oleVT06eUTvbDCStNY',\r\n  authDomain: 'todo-1c323.firebaseapp.com',\r\n  databaseURL: 'https://todo-1c323-default-rtdb.firebaseio.com',\r\n  projectId: 'todo-1c323',\r\n  storageBucket: 'todo-1c323.appspot.com',\r\n  messagingSenderId: '372839437605',\r\n  appId: '1:372839437605:web:31ef34b6e882e585f576cc',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <TooltipProvider>\r\n      <App />\r\n    </TooltipProvider>\r\n  </AppProvider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}