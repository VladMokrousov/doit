{"version":3,"sources":["types.ts","components/page-title/index.tsx","components/page-title/page-title.tsx","pages/main-page.tsx","pages/todos-page/components/search-panel/index.tsx","pages/todos-page/components/search-panel/search-panel.tsx","helpers.ts","pages/todos-page/components/todo-item-content/index.tsx","pages/todos-page/components/todo-item-content/todo-item-content.tsx","pages/todos-page/components/todos-table/index.tsx","pages/todos-page/components/todos-table/todos-table.tsx","pages/todos-page/components/status-filter/index.tsx","pages/todos-page/components/status-filter/status-filter.tsx","components/portal/index.tsx","components/portal/portal.tsx","context/AppContext.tsx","context/TooltipContext.tsx","pages/todos-page/components/todos-modal-content/index.tsx","pages/todos-page/components/todos-modal-content/todos-modal-content.tsx","components/modal/index.tsx","components/modal/modal.tsx","pages/todos-page/index.tsx","pages/notes-page/components/note-item-content/index.tsx","pages/notes-page/components/note-item-content/note-item-content.tsx","pages/notes-page/components/notes-list/index.tsx","pages/notes-page/components/notes-list/notes-list.tsx","pages/notes-page/components/notes-modal-content/index.tsx","pages/notes-page/components/notes-modal-content/notes-modal-content.tsx","pages/notes-page/index.tsx","components/required-mark/index.tsx","components/required-mark/required-mark.tsx","pages/settings-page/components/change-email-modal-content/index.tsx","pages/settings-page/components/change-email-modal-content/change-email-modal-content.tsx","pages/settings-page/components/change-password-modal-content/index.tsx","pages/settings-page/components/change-password-modal-content/change-password-modal-content.tsx","pages/settings-page/components/delete-account-modal-content/index.tsx","pages/settings-page/components/delete-account-modal-content/delete-account-modal-content.tsx","assets/img/anonymous.jpg","pages/settings-page/index.tsx","pages/sign-up-page/components/sign-up-modal-content/index.tsx","pages/sign-up-page/components/sign-up-modal-content/sign-up-modal-content.tsx","pages/sign-up-page/index.tsx","pages/sign-in-page/components/sign-in-modal-content/index.tsx","pages/sign-in-page/components/sign-in-modal-content/sign-in-modal-content.tsx","pages/sign-in-page/index.tsx","pages/reset-password-page/components/reset-password-modal-content.tsx","pages/reset-password-page/index.tsx","components/header/index.tsx","components/header/header.tsx","components/emailUnverifiedOverlay/emailUnverifiedOverlay.tsx","components/tooltip/index.tsx","components/tooltip/tooltip.tsx","app/index.tsx","app/app.tsx","index.tsx"],"names":["TooltipTypes","PageTitle","text","className","MainPage","SearchPanel","onSearchChange","useState","term","setTerm","type","placeholder","value","onChange","evt","changedTerm","target","getFormattedDate","date","currentMonth","getMonth","currentDay","getDate","getFullYear","String","length","signOut","showTooltip","firebase","auth","catch","error","Error","message","TodoItemContent","fieldsContent","onDeleted","description","status","priority","endDatePlan","endDateActual","classNames","Date","onClick","xmlns","height","viewBox","width","fill","d","TodosTable","todos","onSelected","overlayText","tableHeaders","map","item","additionalClass","clazz","scope","tableRows","id","itemProps","importantClass","doneClass","expiredClass","toISOString","onDoubleClick","StatusFilter","filter","onFilterChange","everyStatusCount","buttonsParams","name","label","forEach","count","buttons","Portal","children","el","document","createElement","classList","add","useEffect","body","style","overflow","modalHtml","querySelector","append","remove","createPortal","AppContext","React","createContext","useAppContext","useContext","AppProvider","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","isUserGet","setUserGet","actionCodeSettings","url","useTooltipContext","onAuthStateChanged","user","emailVerified","sendEmailVerification","err","localStorage","getItem","onLogIn","lastSignInTime","metadata","Math","round","getTime","onLogOut","Provider","TooltipContext","TooltipProvider","isOpen","setIsOpen","setType","setMessage","hideTooltip","TodosModalContent","selectedItemId","onEdited","onAdded","onToggleModal","state","setState","database","ref","uid","once","then","snapshot","childSnapshot","childData","val","onSubmit","preventDefault","htmlFor","maxLength","prevState","required","formattedTimeOffset","getTimezoneOffset","includes","replace","min","Modal","classes","title","onCloseBtnClick","TodosPage","showModal","isDataLoaded","getTodos","elem","restParams","todosData","todosRef","on","off","newItemId","addItem","newItem","createTodoItem","push","toggleModal","lastItemId","Object","values","visibleItems","items","filterItem","toLowerCase","indexOf","search","reverse","all","new","inProgress","done","key","set","NoteItemContent","creationDate","NotesList","notes","itemsList","CSSTransition","timeout","TransitionGroup","component","NotesModalContent","setDescription","NotesPage","getNotes","notesData","notesRef","createNoteItem","e","RequiredMark","ChangeEmailModalContent","oldEmail","email","password","credentials","setCredentials","setEmail","isFirstModal","setIsFirstModal","onCredentialsChange","credential","EmailAuthProvider","reauthenticateWithCredential","verifyBeforeUpdateEmail","Info","ChangePasswordModalContent","oldPassword","setPassword","updatePassword","Success","DeleteAccountModalContent","delete","SettingsPage","displayName","setName","photoURL","photoUrl","setPhotoUrl","isNameClicked","setIsNameClicked","isAvatarClicked","setIsAvatarClicked","showModalEmailChange","setShowModalEmailChange","showModalPasswordChange","setShowModalPasswordChange","showModalAccountDelete","setShowModalAccountDelete","isGoogleUser","providerData","providerId","toggleEmailChangeModal","prev","togglePasswordChangeModal","toggleAccountDeleteModal","src","anonymousImg","alt","updateProfile","undefined","sendPasswordResetEmail","SignUpModalContent","repeatPassword","createUserWithEmailAndPassword","setItem","provider","GoogleAuthProvider","signInWithPopup","to","SignUpPage","SignInModalContent","isRememberMeChecked","setIsRememberMeChecked","signInWithEmailAndPassword","removeItem","checked","SignInPage","ResetPasswordModalContent","ResetPasswordPage","Header","exact","activeClassName","EmailUnverifiedOverlay","Tooltip","timerId","setTimeout","clearTimeout","Transition","in","unmountOnExit","transitionState","App","path","render","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM"],"mappings":"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","file":"static/js/main.a7086eb6.chunk.js","sourcesContent":["export type Id = number;\r\n\r\nexport enum TooltipTypes {\r\n  Info = 'info',\r\n  Error = 'error',\r\n  Success = 'success',\r\n}\r\n","import PageTitle from \"./page-title\";\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport './page-title.css';\r\n\r\ninterface PageTitleProps {\r\n  text: string;\r\n}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ text }) => {\r\n  return <h1 className=\"page-title\">{text}</h1>;\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport PageTitle from '../components/page-title/';\r\n\r\nconst MainPage: React.FC = () => (\r\n  <main className=\"main-page\">\r\n    <div className=\"container\">\r\n      <PageTitle text=\"Welcome to the greatest todo app ever!!!\" />\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default MainPage;\r\n","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;\r\n","import React, { useState } from 'react';\r\nimport './search-panel.css';\r\n\r\ninterface SearchPanelProps {\r\n  onSearchChange: (changedTerm: string) => void;\r\n}\r\n\r\nconst SearchPanel: React.FC<SearchPanelProps> = ({ onSearchChange }) => {\r\n  const [term, setTerm] = useState<string>('');\r\n\r\n  const onSearchReplace = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const changedTerm = evt.target.value;\r\n    setTerm(changedTerm);\r\n\r\n    onSearchChange(changedTerm);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Search by description\"\r\n      className=\"search-input\"\r\n      value={term}\r\n      onChange={onSearchReplace}\r\n    />\r\n  );\r\n};\r\nexport default SearchPanel;\r\n","import firebase from 'firebase/app';\r\nimport { TooltipTypes } from './types';\r\n\r\nexport const getFormattedDate = (date: Date, type: string): string => {\r\n  const currentMonth: number = date.getMonth() + 1;\r\n  const currentDay: number = date.getDate();\r\n  if (type === 'calendar') {\r\n    return `${date.getFullYear()}-${\r\n      String(currentMonth).length == 2 ? currentMonth : '0' + currentMonth\r\n    }-${String(currentDay).length == 2 ? currentDay : '0' + currentDay}`;\r\n  }\r\n  return `${String(currentDay).length == 2 ? currentDay : '0' + currentDay}.${\r\n    String(currentMonth).length == 2 ? currentMonth : '0' + currentMonth\r\n  }.${date.getFullYear()}`;\r\n};\r\n\r\nexport const signOut = (showTooltip: (type: TooltipTypes, message: string) => void): void => {\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .catch((error) => {\r\n      showTooltip(TooltipTypes.Error, error.message);\r\n    });\r\n};\r\n","import TodoItemContent from \"./todo-item-content\";\r\nexport default TodoItemContent;\r\n","import React from 'react';\r\nimport { ITodoFieldsContent } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport { getFormattedDate } from '../../../../helpers';\r\nimport './todo-item-content.css';\r\n\r\ninterface TodoItemContentProps {\r\n  fieldsContent: ITodoFieldsContent;\r\n  onDeleted: () => any;\r\n  // onDeleted: () => (id: Id) => void\r\n}\r\n\r\nconst TodoItemContent: React.FC<TodoItemContentProps> = ({ fieldsContent, onDeleted }) => {\r\n  const { description, status, priority, endDatePlan, endDateActual } = fieldsContent;\r\n\r\n  const classNames: string = 'table__item-cell';\r\n\r\n  return (\r\n    <>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--description\">{description}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--status\">{status}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--priority\">{priority}</span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--datePlan\">\r\n          {getFormattedDate(new Date(endDatePlan), 'task')}\r\n        </span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <span className=\"table__item-cell--actualDate\">\r\n          {endDateActual == '-' ? endDateActual : getFormattedDate(new Date(endDateActual), 'task')}\r\n        </span>\r\n      </td>\r\n      <td className={classNames}>\r\n        <button type=\"button\" className=\"btn table__btn table__btn--del\" onClick={onDeleted}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"24px\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24px\"\r\n            fill=\"#ff2a2a\"\r\n          >\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n            <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM9 9h6c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H9c-.55 0-1-.45-1-1v-8c0-.55.45-1 1-1zm6.5-5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1h-2.5z\" />\r\n          </svg>\r\n        </button>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoItemContent;\r\n","import TodosTable from './todos-table';\r\nexport default TodosTable;\r\n","import React from 'react';\r\n\r\nimport TodoItemContent from '../todo-item-content';\r\nimport { ITodoItem } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport './todos-table.css';\r\n\r\ninterface TodosTableProps {\r\n  todos?: ITodoItem[];\r\n  onDeleted?: (id: Id) => void;\r\n  onSelected?: (evt: React.MouseEvent<HTMLTableRowElement>, id: Id) => void;\r\n  overlayText?: string;\r\n}\r\n\r\nconst TodosTable: React.FC<TodosTableProps> = ({ todos, onDeleted, onSelected, overlayText }) => {\r\n  const tableHeadersText: string[] = [\r\n    'Description',\r\n    'Status',\r\n    'Priority',\r\n    'End date plan',\r\n    'End date actual',\r\n    'Action',\r\n  ];\r\n\r\n  const tableHeaders: JSX.Element[] = tableHeadersText.map((item: string): JSX.Element => {\r\n    const additionalClass: string =\r\n      item == 'Description'\r\n        ? 'table__header--description'\r\n        : item == 'Status'\r\n        ? 'table__header--status'\r\n        : item == 'Priority'\r\n        ? 'table__header--priority'\r\n        : item == 'End date plan'\r\n        ? 'table__header--planDate'\r\n        : item == 'End date actual'\r\n        ? 'table__header--actualDate'\r\n        : item == 'Action'\r\n        ? 'table__header--action'\r\n        : '';\r\n\r\n    const clazz: string = additionalClass ? `table__header ${additionalClass}` : 'table__header';\r\n\r\n    return (\r\n      <th key={item} className={clazz} scope=\"col\">\r\n        {item}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  if (todos) {\r\n    const tableRows: JSX.Element[] = todos.map((item: ITodoItem): JSX.Element => {\r\n      const { id, ...itemProps } = item;\r\n\r\n      const importantClass: string | null =\r\n        itemProps.fieldsContent.priority == 'High' ? 'table__item--important' : '';\r\n      const doneClass: string | null =\r\n        itemProps.fieldsContent.status == 'Done' ? 'table__item--done' : '';\r\n      const expiredClass: string | null =\r\n        itemProps.fieldsContent.endDateActual != '-'\r\n          ? itemProps.fieldsContent.endDateActual < itemProps.fieldsContent.endDatePlan\r\n            ? ''\r\n            : 'table__item--expired'\r\n          : new Date().toISOString() > itemProps.fieldsContent.endDatePlan\r\n          ? 'table__item--expired'\r\n          : '';\r\n\r\n      return (\r\n        <tr\r\n          className={`table__item ${doneClass} ${importantClass} ${expiredClass}`}\r\n          key={id}\r\n          onDoubleClick={(evt) => onSelected!(evt, id)}\r\n        >\r\n          <TodoItemContent {...itemProps} onDeleted={() => onDeleted!(id)} />\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <table className=\"table table--todo\">\r\n        <thead>\r\n          <tr className=\"table__headers table--todo__headers\">{tableHeaders}</tr>\r\n        </thead>\r\n        <tbody>{tableRows}</tbody>\r\n      </table>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <table className=\"table table--todo\">\r\n        <thead>\r\n          <tr className=\"table__headers table--todo__headers\">{tableHeaders}</tr>\r\n        </thead>\r\n        <tbody></tbody>\r\n      </table>\r\n      <span>{overlayText}</span>\r\n    </>\r\n  );\r\n};\r\nexport default TodosTable;\r\n","import StatusFilter from \"./status-filter\";\r\nexport default StatusFilter;\r\n","import React from 'react';\r\nimport './status-filter.css';\r\nimport { IEveryStatusCount } from '../../../../interfaces';\r\n\r\ninterface IButtonsParams {\r\n  name: string;\r\n  label: string;\r\n  count?: number;\r\n}\r\n\r\ninterface StatusFilterProps {\r\n  filter: string;\r\n  onFilterChange: (name: string) => void;\r\n  everyStatusCount: IEveryStatusCount;\r\n}\r\n\r\nconst StatusFilter: React.FC<StatusFilterProps> = ({\r\n  filter,\r\n  onFilterChange,\r\n  everyStatusCount,\r\n}) => {\r\n  const buttonsParams: IButtonsParams[] = [\r\n    { name: 'inProgress', label: 'In progress' },\r\n    { name: 'new', label: 'New' },\r\n    { name: 'done', label: 'Done' },\r\n    { name: 'all', label: 'All' },\r\n  ];\r\n\r\n  buttonsParams.forEach((item) => {\r\n    item.count = everyStatusCount[item.name];\r\n  });\r\n\r\n  const buttons: JSX.Element[] = buttonsParams.map(({ name, label, count }): JSX.Element => {\r\n    const isActive = filter === name;\r\n    const clazz = isActive ? 'status-filter__btn--active' : null;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={`status-filter__btn btn ${clazz}`}\r\n        key={name}\r\n        onClick={() => {\r\n          onFilterChange(name);\r\n        }}\r\n      >\r\n        {`${label} - ${count}`}\r\n      </button>\r\n    );\r\n  });\r\n  return <div className=\"status-filter\">{buttons}</div>;\r\n};\r\n\r\nexport default StatusFilter;\r\n","import Portal from \"./portal\";\r\nexport default Portal;\r\n","import React, { ReactNode, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport './portal.css';\r\n\r\ninterface PortalProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Portal: React.FC<PortalProps> = ({ children }) => {\r\n  const el: HTMLDivElement = document.createElement('div');\r\n  el.classList.add('overlay');\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = 'hidden';\r\n    // document.querySelector(\"#modal\").append(el);\r\n\r\n    const modalHtml: HTMLDivElement | null = document.querySelector('#modal');\r\n    if (modalHtml) {\r\n      modalHtml.append(el);\r\n    }\r\n\r\n    return () => {\r\n      el.remove();\r\n      document.body.style.overflow = 'visible';\r\n    };\r\n  }, [children]);\r\n\r\n  return createPortal(children, el);\r\n};\r\n\r\nexport default Portal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useTooltipContext } from './index';\r\nimport firebase from 'firebase/app';\r\nimport { TooltipTypes } from '../types';\r\n\r\ninterface AppContextProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n// @todo По идее мне не нужно указывать тип и аргумент. Нужно посмотреть, как сделать нормально\r\nconst AppContext = React.createContext<any>({});\r\n\r\nexport const useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\n// @todo Не уверен, что корректно давать контексту тип React.FC\r\nexport const AppProvider: React.FC<AppContextProps> = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(false);\r\n  const [isUserGet, setUserGet] = useState(false);\r\n\r\n  const actionCodeSettings = {\r\n    url: 'https://vladmokrousov.github.io/doit/build/#/sign-in',\r\n    // url: 'http://localhost:3000/sign-in',\r\n  };\r\n\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        if (!user.emailVerified) {\r\n          user.sendEmailVerification(actionCodeSettings).catch((err) => {\r\n            showTooltip(TooltipTypes.Error, `The email didn't send. ${err.message}`);\r\n          });\r\n        }\r\n        if (!localStorage.getItem('rememberMe')) {\r\n          const lastSignInTime = new Date(user.metadata.lastSignInTime!);\r\n          const lastSignInTimeTimeStamp = Math.round(lastSignInTime.getTime() / 1000);\r\n          const yesterdayTimeStamp = Math.round(new Date().getTime() / 1000) - 24 * 3600;\r\n\r\n          if (lastSignInTimeTimeStamp < yesterdayTimeStamp) {\r\n            firebase\r\n              .auth()\r\n              .signOut()\r\n              .catch((error) => {\r\n                showTooltip(TooltipTypes.Error, error.message);\r\n              });\r\n          } else {\r\n            onLogIn(user);\r\n          }\r\n        } else {\r\n          onLogIn(user);\r\n        }\r\n      } else {\r\n        onLogOut();\r\n      }\r\n      setUserGet(true);\r\n    });\r\n  }, []);\r\n\r\n  const onLogIn = (user: any): void => {\r\n    setIsLoggedIn(true);\r\n    setCurrentUser(user);\r\n  };\r\n  const onLogOut = (): void => {\r\n    setIsLoggedIn(false);\r\n    setCurrentUser(false);\r\n  };\r\n\r\n  return isUserGet ? (\r\n    <AppContext.Provider value={{ isLoggedIn, currentUser, actionCodeSettings }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  ) : null;\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { TooltipTypes } from '../types';\r\n\r\ninterface TooltipContextProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n//По идее мне не нужно указывать тип и аргумент. Нужно посмотреть, как сделать нормально\r\nconst TooltipContext = React.createContext<any>({});\r\n\r\nexport const useTooltipContext = () => {\r\n  return useContext(TooltipContext);\r\n};\r\n\r\n//Не уверен, что корректно давать контексту тип React.FC\r\nexport const TooltipProvider: React.FC<TooltipContextProps> = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [type, setType] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const showTooltip = (type: TooltipTypes, message: string): void => {\r\n    setType(type);\r\n    setMessage(message);\r\n    setIsOpen(true);\r\n  };\r\n  const hideTooltip = (): void => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <TooltipContext.Provider value={{ isOpen, type, message, showTooltip, hideTooltip }}>\r\n      {children}\r\n    </TooltipContext.Provider>\r\n  );\r\n};\r\n","import TodosModalContent from './todos-modal-content';\r\nexport default TodosModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAppContext, useTooltipContext } from '../../../../context';\r\nimport { ITodoFieldsContent } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport firebase from 'firebase/app';\r\nimport { getFormattedDate } from '../../../../helpers';\r\nimport { TooltipTypes } from '../../../../types';\r\nimport './todos-modal-content.css';\r\n\r\ninterface TodosModalProps {\r\n  selectedItemId: Id | false;\r\n  onEdited?: (fieldsContent: ITodoFieldsContent) => void;\r\n  onAdded: (fieldsContent: ITodoFieldsContent) => void;\r\n  onToggleModal: (evt: any) => void;\r\n}\r\n\r\nconst TodosModalContent: React.FC<TodosModalProps> = ({\r\n  selectedItemId,\r\n  onEdited,\r\n  onAdded,\r\n  onToggleModal,\r\n}) => {\r\n  const { currentUser } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [state, setState] = useState<ITodoFieldsContent>({\r\n    description: '',\r\n    priority: 'Low',\r\n    status: 'New',\r\n    endDatePlan: '',\r\n    endDateActual: '-',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n      todosRef\r\n        .once('value')\r\n        .then((snapshot) => {\r\n          snapshot.forEach((childSnapshot) => {\r\n            const childData = childSnapshot.val();\r\n            if (childData.id === selectedItemId) {\r\n              setState({\r\n                ...childData.fieldsContent,\r\n              });\r\n\r\n              return true;\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          showTooltip(TooltipTypes.Error, `Couldn't take the data from DB: ${err.message}`);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const onDescriptionChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        description: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onPriorityChange = (evt: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        priority: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onStatusChange = (evt: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    if (evt.target.value == 'Done') {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          endDateActual: new Date().toISOString(),\r\n        };\r\n      });\r\n    } else {\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          endDateActual: '-',\r\n        };\r\n      });\r\n    }\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        status: evt.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onEndDatePlanChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    if (evt.target.value.length == 10) {\r\n      let formattedTimeOffset = String(new Date().getTimezoneOffset() / 60);\r\n\r\n      if (formattedTimeOffset.includes('-')) {\r\n        formattedTimeOffset.length == 2\r\n          ? (formattedTimeOffset = formattedTimeOffset.replace('-', '+0'))\r\n          : (formattedTimeOffset = formattedTimeOffset.replace('-', '+'));\r\n      } else {\r\n        formattedTimeOffset.length == 1\r\n          ? (formattedTimeOffset = `-0${formattedTimeOffset}`)\r\n          : (formattedTimeOffset = `-${formattedTimeOffset}`);\r\n      }\r\n\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          endDatePlan: new Date(\r\n            `${evt.target.value}T23:59:59.000${formattedTimeOffset}:00`\r\n          ).toISOString(),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    if (selectedItemId) {\r\n      onEdited!(state);\r\n    } else {\r\n      onAdded(state);\r\n    }\r\n\r\n    onToggleModal(evt);\r\n  };\r\n\r\n  const { description, priority, status, endDatePlan } = state;\r\n\r\n  return (\r\n    <form className=\"todos-form\" onSubmit={onSubmit}>\r\n      <div className=\"todos-form__field-wrapper\">\r\n        <label className=\"todos-form__label\" htmlFor=\"description\">\r\n          Description<sup className=\"todos-form__label-required\">*</sup>:\r\n        </label>\r\n        <input\r\n          maxLength={40}\r\n          className=\"todos-form__field\"\r\n          id=\"description\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          onChange={onDescriptionChange}\r\n          placeholder=\"What must be to do?\"\r\n          value={description}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"todos-form__fields-group-wrapper\">\r\n        <div className=\"todos-form__field-wrapper\">\r\n          <label className=\"todos-form__label\" htmlFor=\"priority\">\r\n            Priority:\r\n          </label>\r\n          <select\r\n            className=\"todos-form__field\"\r\n            id=\"priority\"\r\n            name=\"priority\"\r\n            onChange={onPriorityChange}\r\n            value={priority}\r\n          >\r\n            <option value=\"Low\">Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"todos-form__field-wrapper\">\r\n          <label className=\"todos-form__label\" htmlFor=\"status\">\r\n            Status:\r\n          </label>\r\n          <select\r\n            className=\"todos-form__field\"\r\n            id=\"status\"\r\n            name=\"status\"\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          >\r\n            <option value=\"New\">New</option>\r\n            <option value=\"In progress\">In progress</option>\r\n            <option value=\"Done\">Done</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"todos-form__field-wrapper\">\r\n        <label className=\"todos-form__label\" htmlFor=\"calendar\">\r\n          End Date:{' '}\r\n        </label>\r\n        <input\r\n          required\r\n          className=\"todos-form__field\"\r\n          id=\"calendar\"\r\n          type=\"date\"\r\n          name=\"calendar\"\r\n          onChange={onEndDatePlanChange}\r\n          value={endDatePlan ? getFormattedDate(new Date(endDatePlan), 'calendar') : endDatePlan}\r\n          min={getFormattedDate(new Date(), 'calendar')}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"todos-form__submit-btn\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodosModalContent;\r\n","import Modal from './modal';\r\nexport default Modal;\r\n","import React, { ReactNode } from 'react';\r\nimport './modal.css';\r\n\r\ninterface IModal {\r\n  classes: string;\r\n  title: string;\r\n  onCloseBtnClick?: (evt: any) => void;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Modal: React.FC<IModal> = ({ classes, title, onCloseBtnClick, children }) => (\r\n  <section className={`modal ${classes}`}>\r\n    <h2 className=\"modal__title\">{title}</h2>\r\n    {onCloseBtnClick && (\r\n      <button className=\"modal__close\" onClick={onCloseBtnClick}>\r\n        <span className=\"visually-hidden\">Закрыть</span>\r\n      </button>\r\n    )}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/page-title';\r\nimport SearchPanel from './components/search-panel';\r\nimport TodosTable from './components/todos-table';\r\nimport StatusFilter from './components/status-filter';\r\nimport Portal from '../../components/portal';\r\nimport TodosModalContent from './components/todos-modal-content';\r\nimport Modal from '../../components/modal';\r\nimport { useAppContext, useTooltipContext } from '../../context';\r\nimport firebase from 'firebase/app';\r\nimport { ITodoFieldsContent, ITodoItem, IEveryStatusCount } from '../../interfaces';\r\nimport { Id, TooltipTypes } from '../../types';\r\n\r\nimport './index.css';\r\n\r\ninterface ITodosData {\r\n  [key: string]: ITodoItem;\r\n}\r\n\r\ninterface ITodosPageState {\r\n  todosData?: ITodosData;\r\n  term: string;\r\n  filter: string;\r\n  showModal: boolean;\r\n  selectedItemId: Id | false;\r\n  isDataLoaded: boolean;\r\n}\r\n\r\nconst TodosPage: React.FC = () => {\r\n  const { currentUser } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n  const [state, setState] = useState<ITodosPageState>({\r\n    term: '',\r\n    filter: 'inProgress',\r\n    showModal: false,\r\n    selectedItemId: false,\r\n    isDataLoaded: false,\r\n  });\r\n  useEffect(() => {\r\n    //Обернуть в try catch?\r\n    const getTodos = (elem: firebase.database.DataSnapshot) => {\r\n      setState(({ isDataLoaded, ...restParams }) => {\r\n        return {\r\n          isDataLoaded: true,\r\n          ...restParams,\r\n          todosData: elem.val(),\r\n        };\r\n      });\r\n    };\r\n    const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n    todosRef.on('value', getTodos);\r\n\r\n    return () => {\r\n      todosRef.off('value', getTodos);\r\n    };\r\n  }, []);\r\n\r\n  if (state.isDataLoaded) {\r\n    let newItemId: Id = 100;\r\n\r\n    const createTodoItem = (fieldsContent: ITodoFieldsContent): ITodoItem => {\r\n      return {\r\n        fieldsContent,\r\n        id: newItemId,\r\n      };\r\n    };\r\n\r\n    const addItem = (fieldsContent: ITodoFieldsContent): void => {\r\n      const newItem: ITodoItem = createTodoItem({\r\n        ...fieldsContent,\r\n      });\r\n\r\n      const db = firebase.database();\r\n      db.ref('users/' + currentUser.uid + '/todos')\r\n        .push(newItem)\r\n        .catch((err) => {\r\n          showTooltip(TooltipTypes.Error, `Add item failed: ${err.message}`);\r\n        });\r\n    };\r\n\r\n    // evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement> | React.MouseEvent<HTMLTableRowElement>\r\n    // Сделать отдельную функцию на закрытие окна?\r\n    const toggleModal = (evt: any): void => {\r\n      if (evt.target.className == 'modal__close') {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: false,\r\n          };\r\n        });\r\n      }\r\n\r\n      setState(({ showModal, ...restParams }) => {\r\n        return {\r\n          ...restParams,\r\n          showModal: !showModal,\r\n        };\r\n      });\r\n    };\r\n\r\n    if (state.todosData) {\r\n      let lastItemId: Id = 100;\r\n\r\n      Object.values(state.todosData).forEach((item) => {\r\n        if (item.id > lastItemId) {\r\n          lastItemId = item.id;\r\n        }\r\n      });\r\n      newItemId = lastItemId + 1;\r\n\r\n      const deleteItem = (id: Id): void => {\r\n        const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n        todosRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === id) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/todos/${childSnapshot.key}`)\r\n                  .remove()\r\n                  .catch((err) => {\r\n                    showTooltip(TooltipTypes.Error, `Removing the task was failed: ${err.message}`);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            showTooltip(TooltipTypes.Error, `Couldn't take the data from DB: ${err.message}`);\r\n          });\r\n      };\r\n\r\n      const editItem = (fieldsContent: ITodoFieldsContent): void => {\r\n        const todosRef = firebase.database().ref('users/' + currentUser.uid + '/todos');\r\n        todosRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === state.selectedItemId) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/todos/${childSnapshot.key}/fieldsContent`)\r\n                  .set({ ...fieldsContent })\r\n                  .catch((err) => {\r\n                    showTooltip(TooltipTypes.Error, `Editing the task was failed: ${err.message}`);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            showTooltip(TooltipTypes.Error, `Couldn't take the data from DB: ${err.message}`);\r\n          });\r\n\r\n        setState(({ selectedItemId, ...restParams }) => {\r\n          return {\r\n            selectedItemId: false,\r\n            ...restParams,\r\n          };\r\n        });\r\n      };\r\n\r\n      const search = (items: ITodoItem[], term: string): ITodoItem[] => {\r\n        if (term.length === 0) {\r\n          return items;\r\n        }\r\n        return items.filter((item) => {\r\n          return item.fieldsContent.description.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n      };\r\n\r\n      const onSearchChange = (term: string): void => {\r\n        //Для единообразия можно деструктуризировать стейт во всех подобных случаях. Это еще и безопасней\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            term,\r\n          };\r\n        });\r\n      };\r\n\r\n      const filterItem = (items: ITodoItem[], filter: string): ITodoItem[] => {\r\n        switch (filter) {\r\n          case 'all':\r\n            return items;\r\n          case 'new':\r\n            return items.filter((item) => item.fieldsContent.status == 'New');\r\n          case 'inProgress':\r\n            return items.filter((item) => item.fieldsContent.status == 'In progress');\r\n          case 'done':\r\n            return items.filter((item) => item.fieldsContent.status == 'Done');\r\n\r\n          default:\r\n            return items;\r\n        }\r\n      };\r\n\r\n      const onFilterChange = (filter: string): void => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            filter,\r\n          };\r\n        });\r\n      };\r\n\r\n      const selectItem = (evt: React.MouseEvent<HTMLTableRowElement>, id: Id): void => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: id,\r\n          };\r\n        });\r\n        //В дальнейшем нужно избавиться от передачи события\r\n        toggleModal(evt);\r\n      };\r\n\r\n      const { todosData, term, filter, showModal, selectedItemId } = state;\r\n\r\n      const visibleItems: ITodoItem[] = filterItem(\r\n        search(Object.values(todosData), term),\r\n        filter\r\n      ).reverse();\r\n\r\n      const everyStatusCount: IEveryStatusCount = {\r\n        all: Object.values(todosData).length,\r\n        new: Object.values(todosData).filter((item) => item.fieldsContent.status == 'New').length,\r\n        inProgress: Object.values(todosData).filter(\r\n          (item) => item.fieldsContent.status == 'In progress'\r\n        ).length,\r\n        done: Object.values(todosData).filter((item) => item.fieldsContent.status == 'Done').length,\r\n      };\r\n\r\n      return (\r\n        <main className=\"todos-page\">\r\n          <div className=\"container\">\r\n            <PageTitle text=\"Todo List\" />\r\n            <div className=\"todos-page__control-panel\">\r\n              <button className=\"todos-page__add-task-btn\" onClick={toggleModal}>\r\n                Add task\r\n              </button>\r\n              <SearchPanel onSearchChange={onSearchChange} />\r\n              <StatusFilter\r\n                filter={filter}\r\n                onFilterChange={onFilterChange}\r\n                everyStatusCount={everyStatusCount}\r\n              />\r\n            </div>\r\n\r\n            <TodosTable todos={visibleItems} onDeleted={deleteItem} onSelected={selectItem} />\r\n\r\n            {showModal && (\r\n              <Portal>\r\n                <Modal\r\n                  classes=\"modal--todos\"\r\n                  title={selectedItemId ? 'Edit task' : 'Add task'}\r\n                  onCloseBtnClick={toggleModal}\r\n                >\r\n                  <TodosModalContent\r\n                    onAdded={addItem}\r\n                    onEdited={editItem}\r\n                    onToggleModal={toggleModal}\r\n                    selectedItemId={selectedItemId}\r\n                  />\r\n                </Modal>\r\n              </Portal>\r\n            )}\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <main className=\"todos-page\">\r\n        <div className=\"container\">\r\n          <PageTitle text=\"Todo List\" />\r\n          <div className=\"flex-wrapper todos-page__control-panel\">\r\n            <button className=\"todos-page__add-task-btn\" onClick={toggleModal}>\r\n              Add task\r\n            </button>\r\n          </div>\r\n\r\n          <TodosTable overlayText=\"You can sleep soundly\" />\r\n\r\n          {state.showModal && (\r\n            <Portal>\r\n              <Modal classes=\"modal--todos\" title=\"Add task\" onCloseBtnClick={toggleModal}>\r\n                <TodosModalContent\r\n                  onAdded={addItem}\r\n                  selectedItemId={false}\r\n                  onToggleModal={toggleModal}\r\n                />\r\n              </Modal>\r\n            </Portal>\r\n          )}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"todos-page\">\r\n      <div className=\"container\">\r\n        <PageTitle text=\"Todo List\" />\r\n        <span>Loading...</span>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodosPage;\r\n","import NoteItemContent from './note-item-content';\r\nexport default NoteItemContent;\r\n","import React from 'react';\r\nimport { getFormattedDate } from '../../../../helpers';\r\nimport { Id } from '../../../../types';\r\nimport './note-item-content.css';\r\n\r\ninterface NoteItemContentProps {\r\n  creationDate: string;\r\n  description: string;\r\n  onDeleted: () => any;\r\n  // onDeleted: () => (id: Id) => void\r\n}\r\n\r\nconst NoteItemContent: React.FC<NoteItemContentProps> = ({\r\n  creationDate,\r\n  description,\r\n  onDeleted,\r\n}) => (\r\n  <>\r\n    <div className=\"note__header\">\r\n      <span>{getFormattedDate(new Date(creationDate), 'note')}</span>\r\n      <button type=\"button\" className=\"btn note__btn note__btn--del\" onClick={onDeleted}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#ff2a2a\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM9 9h6c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H9c-.55 0-1-.45-1-1v-8c0-.55.45-1 1-1zm6.5-5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1h-2.5z\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n    <p className=\"note__description\">{description}</p>\r\n  </>\r\n);\r\n\r\nexport default NoteItemContent;\r\n","import NotesList from './notes-list';\r\nexport default NotesList;\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport NoteItemContent from '../note-item-content';\r\nimport { INoteItem } from '../../../../interfaces';\r\nimport { Id } from '../../../../types';\r\nimport './notes-list.css';\r\n\r\ninterface NotesListProps {\r\n  notes?: INoteItem[];\r\n  onDeleted?: (id: Id) => void;\r\n  onSelected?: (evt: React.MouseEvent<HTMLLIElement>, id: Id) => void;\r\n  overlayText?: string;\r\n}\r\n\r\nconst NotesList: React.FC<NotesListProps> = ({ notes, onDeleted, onSelected, overlayText }) => {\r\n  if (notes && onDeleted && onSelected) {\r\n    const itemsList: JSX.Element[] = notes.map((item: INoteItem): JSX.Element => {\r\n      const { id, ...itemProps } = item;\r\n\r\n      return (\r\n        <CSSTransition key={id} timeout={500} classNames=\"list__item\">\r\n          <li className=\"list__item\" onDoubleClick={(evt) => onSelected(evt, id)}>\r\n            <NoteItemContent {...itemProps} onDeleted={() => onDeleted(id)} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"list list--notes\">\r\n        <TransitionGroup component={null}>{itemsList}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <ul className=\"list list--notes\"></ul>\r\n      <span>{overlayText}</span>\r\n    </>\r\n  );\r\n};\r\nexport default NotesList;\r\n","import NotesModalContent from './notes-modal-content';\r\nexport default NotesModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAppContext, useTooltipContext } from '../../../../context';\r\nimport { Id, TooltipTypes } from '../../../../types';\r\nimport firebase from 'firebase/app';\r\nimport './notes-modal-content.css';\r\n\r\ninterface NotesModalProps {\r\n  selectedItemId: Id | false;\r\n  onEdited?: (description: string) => void;\r\n  onAdded: (description: string) => void;\r\n  onToggleModal: (evt: any) => void;\r\n}\r\n\r\nconst NotesModalContent: React.FC<NotesModalProps> = ({\r\n  selectedItemId,\r\n  onEdited,\r\n  onAdded,\r\n  onToggleModal,\r\n}) => {\r\n  const { currentUser } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (selectedItemId) {\r\n      const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n      notesRef\r\n        .once('value')\r\n        .then((snapshot) => {\r\n          snapshot.forEach((childSnapshot) => {\r\n            const childData = childSnapshot.val();\r\n            if (childData.id === selectedItemId) {\r\n              setDescription(childData.description);\r\n\r\n              return true;\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          showTooltip(TooltipTypes.Error, `Couldn't take the data from DB: ${error.message}`);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const onDescriptionChange = (evt: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setDescription(evt.target.value);\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    if (selectedItemId) {\r\n      onEdited!(description);\r\n    } else {\r\n      onAdded(description);\r\n    }\r\n\r\n    onToggleModal(evt);\r\n  };\r\n\r\n  return (\r\n    <form className=\"notes-form\" onSubmit={onSubmit}>\r\n      <label className=\"notes-form__label\" htmlFor=\"description\">\r\n        Description<sup className=\"notes-form__label-required\">*</sup>:\r\n      </label>\r\n      <textarea\r\n        className=\"notes-form__field notes-form__field--description\"\r\n        id=\"description\"\r\n        name=\"description\"\r\n        onChange={onDescriptionChange}\r\n        placeholder=\"Type something:)\"\r\n        value={description}\r\n        required\r\n      />\r\n\r\n      <button className=\"notes-form__submit-btn\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NotesModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/page-title';\r\nimport NotesList from './components/notes-list';\r\nimport Portal from '../../components/portal';\r\nimport NotesModalContent from './components/notes-modal-content';\r\nimport Modal from '../../components/modal';\r\nimport { useAppContext, useTooltipContext } from '../../context';\r\nimport firebase from 'firebase/app';\r\nimport { INoteItem } from '../../interfaces';\r\nimport { Id, TooltipTypes } from '../../types';\r\n\r\nimport './index.css';\r\n\r\ninterface INotesData {\r\n  [key: string]: INoteItem;\r\n}\r\n\r\ninterface INotesPageState {\r\n  notesData?: INotesData;\r\n  showModal: boolean;\r\n  selectedItemId: Id | false;\r\n  isDataLoaded: boolean;\r\n}\r\n\r\nconst NotesPage: React.FC = () => {\r\n  const { currentUser } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n  const [state, setState] = useState<INotesPageState>({\r\n    showModal: false,\r\n    selectedItemId: false,\r\n    isDataLoaded: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // @todo Обернуть в try catch?\r\n    const getNotes = (elem: firebase.database.DataSnapshot) => {\r\n      setState(({ isDataLoaded, ...restParams }) => {\r\n        return {\r\n          isDataLoaded: true,\r\n          ...restParams,\r\n          notesData: elem.val(),\r\n        };\r\n      });\r\n    };\r\n    const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n    notesRef.on('value', getNotes);\r\n\r\n    return () => {\r\n      notesRef.off('value', getNotes);\r\n    };\r\n  }, []);\r\n\r\n  if (state.isDataLoaded) {\r\n    let newItemId: Id = 100;\r\n\r\n    const createNoteItem = (description: string): INoteItem => {\r\n      return {\r\n        description,\r\n        // creationDate: getCurrentFormattedDate(),\r\n        creationDate: new Date().toISOString(),\r\n        id: newItemId,\r\n      };\r\n    };\r\n\r\n    const addItem = (description: string): void => {\r\n      const newItem: INoteItem = createNoteItem(description);\r\n\r\n      firebase\r\n        .database()\r\n        .ref('users/' + currentUser.uid + '/notes')\r\n        .push(newItem)\r\n        .catch((e) => {\r\n          showTooltip(TooltipTypes.Error, `Add item failed: ${e.message}`);\r\n        });\r\n    };\r\n\r\n    // const getCurrentFormattedDate = (): string => {\r\n    //   const currentDate: Date = new Date();\r\n    //   const currentMonth: number = currentDate.getMonth() + 1;\r\n    //   const currentDay: number = currentDate.getDate();\r\n\r\n    //   return `${String(currentDay).length == 2 ? currentDay : '0' + currentDay}.${\r\n    //     String(currentMonth).length == 2 ? currentMonth : '0' + currentMonth\r\n    //   }.${currentDate.getFullYear()}`;\r\n    // };\r\n\r\n    // @todo evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>\r\n    // @todo Сделать отдельную функцию на закрытие окна?\r\n    const toggleModal = (evt: any): void => {\r\n      if (evt.target.className == 'modal__close') {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: false,\r\n          };\r\n        });\r\n      }\r\n\r\n      setState(({ showModal, ...restParams }) => {\r\n        return {\r\n          ...restParams,\r\n          showModal: !showModal,\r\n        };\r\n      });\r\n    };\r\n\r\n    if (state.notesData) {\r\n      let lastItemId: Id = 100;\r\n\r\n      Object.values(state.notesData).forEach((item) => {\r\n        if (item.id > lastItemId) {\r\n          lastItemId = item.id;\r\n        }\r\n      });\r\n      newItemId = lastItemId + 1;\r\n\r\n      const deleteItem = (id: Id): void => {\r\n        const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n        notesRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === id) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/notes/${childSnapshot.key}`)\r\n                  .remove()\r\n                  .catch((error) => {\r\n                    showTooltip(TooltipTypes.Error, `Remove failed: ${error.message}`);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            showTooltip(TooltipTypes.Error, `Couldn't take the data from DB: ${error.message}`);\r\n          });\r\n      };\r\n\r\n      const editItem = (description: string): void => {\r\n        const notesRef = firebase.database().ref('users/' + currentUser.uid + '/notes');\r\n        notesRef\r\n          .once('value')\r\n          .then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              const childData = childSnapshot.val();\r\n              if (childData.id === state.selectedItemId) {\r\n                firebase\r\n                  .database()\r\n                  .ref('users/' + currentUser.uid + `/notes/${childSnapshot.key}/description`)\r\n                  .set(description)\r\n                  .catch((error) => {\r\n                    showTooltip(TooltipTypes.Error, `Edit item failed: ${error.message}`);\r\n                  });\r\n                return true;\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            showTooltip(TooltipTypes.Error, `Couldn't take the data from DB: ${error.message}`);\r\n          });\r\n\r\n        setState(({ selectedItemId, ...restParams }) => {\r\n          return {\r\n            selectedItemId: false,\r\n            ...restParams,\r\n          };\r\n        });\r\n      };\r\n\r\n      const selectItem = (evt: React.MouseEvent<HTMLLIElement>, id: Id): void => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            selectedItemId: id,\r\n          };\r\n        });\r\n        // @todo В дальнейшем нужно избавиться от передачи события\r\n        toggleModal(evt);\r\n      };\r\n\r\n      const { notesData, showModal, selectedItemId } = state;\r\n\r\n      return (\r\n        <main className=\"notes-page\">\r\n          <div className=\"container\">\r\n            <PageTitle text=\"Notes\" />\r\n            <button className=\"notes-page__add-note-btn\" onClick={toggleModal}>\r\n              Add note\r\n            </button>\r\n            <NotesList\r\n              notes={Object.values(notesData).reverse()}\r\n              onDeleted={deleteItem}\r\n              onSelected={selectItem}\r\n            />\r\n            {showModal && (\r\n              <Portal>\r\n                <Modal\r\n                  classes=\"modal--notes\"\r\n                  title={selectedItemId ? 'Edit note' : 'Add note'}\r\n                  onCloseBtnClick={toggleModal}\r\n                >\r\n                  <NotesModalContent\r\n                    onAdded={addItem}\r\n                    onEdited={editItem}\r\n                    onToggleModal={toggleModal}\r\n                    selectedItemId={selectedItemId}\r\n                  />\r\n                </Modal>\r\n              </Portal>\r\n            )}\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <main className=\"notes-page\">\r\n        <div className=\"container\">\r\n          <PageTitle text=\"Notes\" />\r\n          <button className=\"notes-page__add-note-btn\" onClick={toggleModal}>\r\n            Add note\r\n          </button>\r\n          <NotesList overlayText=\"You can sleep soundly\" />\r\n          {state.showModal && (\r\n            <Portal>\r\n              <Modal classes=\"modal--notes\" title=\"Add note\" onCloseBtnClick={toggleModal}>\r\n                <NotesModalContent\r\n                  onAdded={addItem}\r\n                  onToggleModal={toggleModal}\r\n                  selectedItemId={false}\r\n                />\r\n              </Modal>\r\n            </Portal>\r\n          )}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"notes-page\">\r\n      <div className=\"container\">\r\n        <PageTitle text=\"Notes\" />\r\n        <span>Loading...</span>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotesPage;\r\n","import RequiredMark from './required-mark';\r\nexport default RequiredMark;\r\n","import React from 'react';\r\nimport './required-mark.css';\r\n\r\nconst RequiredMark = (): JSX.Element => <sup className=\"required-mark\">*</sup>;\r\nexport default RequiredMark;\r\n","import ChangeEmailModalContent from './change-email-modal-content';\r\nexport default ChangeEmailModalContent;\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nimport { useTooltipContext } from '../../../../context';\r\nimport RequiredMark from '../../../../components/required-mark';\r\nimport { TooltipTypes } from '../../../../types';\r\nimport './change-email-modal-content.css';\r\n\r\ninterface ChangeEmailModalProps {\r\n  onToggleModal: (evt: any) => void;\r\n  user: any;\r\n  actionCodeSettings: any;\r\n}\r\ninterface IConfirmCredentials {\r\n  oldEmail: string;\r\n  password: string;\r\n}\r\n\r\nconst ChangeEmailModalContent: React.FC<ChangeEmailModalProps> = ({\r\n  onToggleModal,\r\n  user,\r\n  actionCodeSettings,\r\n}) => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [credentials, setCredentials] = useState<IConfirmCredentials>({\r\n    oldEmail: user.email,\r\n    password: '',\r\n  });\r\n  const [email, setEmail] = useState('');\r\n  const [isFirstModal, setIsFirstModal] = useState(true);\r\n\r\n  const onCredentialsChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n\r\n    setCredentials((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onEmailChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const onConfirmCredentials = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { oldEmail, password } = credentials;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(oldEmail, password);\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        setIsFirstModal(false);\r\n      })\r\n      .catch((error: any) => {\r\n        showTooltip(TooltipTypes.Error, `Reauth didn't pass: ${error.message}`);\r\n      });\r\n  };\r\n  const onSetNewEmail = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    user\r\n      .verifyBeforeUpdateEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        showTooltip(\r\n          TooltipTypes.Info,\r\n          'Check your new email and confirm it to finish the change the email'\r\n        );\r\n        onToggleModal(evt);\r\n      })\r\n      .catch(function (err: any) {\r\n        showTooltip(TooltipTypes.Error, `Your email didn't update: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"change-email-form\"\r\n      onSubmit={isFirstModal ? onConfirmCredentials : onSetNewEmail}\r\n    >\r\n      {isFirstModal ? (\r\n        <>\r\n          <div className=\"change-email-form__field-wrapper\">\r\n            <label className=\"change-email-form__label\" htmlFor=\"oldEmail\">\r\n              Old email\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"change-email-form__field\"\r\n              id=\"oldEmail\"\r\n              type=\"email\"\r\n              placeholder=\"Enter you old email\"\r\n              onChange={onCredentialsChange}\r\n              value={credentials.oldEmail}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"change-email-form__field-wrapper\">\r\n            <label className=\"change-email-form__label\" htmlFor=\"password\">\r\n              Password\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"change-email-form__field\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter you password\"\r\n              onChange={onCredentialsChange}\r\n              value={credentials.password}\r\n              required\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"change-email-form__field-wrapper\">\r\n          <label className=\"change-email-form__label\" htmlFor=\"newEmail\">\r\n            New email\r\n            <RequiredMark />:\r\n          </label>\r\n          <input\r\n            className=\"change-email-form__field\"\r\n            id=\"newEmail\"\r\n            type=\"email\"\r\n            placeholder=\"Enter the new email\"\r\n            onChange={onEmailChange}\r\n            value={email}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"change-email-form__submit-btn\">\r\n        {isFirstModal ? 'Continue' : 'Save'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangeEmailModalContent;\r\n","import ChangePasswordModalContent from './change-password-modal-content';\r\nexport default ChangePasswordModalContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nimport { useTooltipContext } from '../../../../context';\r\nimport RequiredMark from '../../../../components/required-mark';\r\nimport { TooltipTypes } from '../../../../types';\r\nimport './change-password-modal-content.css';\r\n\r\ninterface ChangePasswordModalProps {\r\n  onToggleModal: (evt: any) => void;\r\n  user: any;\r\n}\r\ninterface IConfirmCredentials {\r\n  email: string;\r\n  oldPassword: string;\r\n}\r\n\r\nconst ChangePasswordModalContent: React.FC<ChangePasswordModalProps> = ({\r\n  onToggleModal,\r\n  user,\r\n}) => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [credentials, setCredentials] = useState<IConfirmCredentials>({\r\n    email: user.email,\r\n    oldPassword: '',\r\n  });\r\n  const [isFirstModal, setIsFirstModal] = useState(true);\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onCredentialsChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n\r\n    setCredentials((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onPasswordChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(evt.target.value);\r\n  };\r\n\r\n  const onConfirmCredentials = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { email, oldPassword } = credentials;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(email, oldPassword);\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        setIsFirstModal(false);\r\n      })\r\n      .catch((error: any) => {\r\n        showTooltip(TooltipTypes.Error, `Reauth didn't pass: ${error.message}`);\r\n      });\r\n  };\r\n\r\n  const onSetNewPassword = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    // @todo Вылозит предупреждение от гугл, что в результате утечки даннных, пароль оказался раскрыт. Скорее всего связано с отсутствием шифрования с моей стороны\r\n    user\r\n      .updatePassword(password)\r\n      .then(() => {\r\n        showTooltip(TooltipTypes.Success, 'Your password was successfully updated!');\r\n        onToggleModal(evt);\r\n      })\r\n      .catch((err: any) => {\r\n        showTooltip(TooltipTypes.Error, `Your password didn't be update: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"change-password-form\"\r\n      onSubmit={isFirstModal ? onConfirmCredentials : onSetNewPassword}\r\n    >\r\n      {isFirstModal ? (\r\n        <>\r\n          <div className=\"change-password-form__field-wrapper\">\r\n            <label className=\"change-password-form__label\" htmlFor=\"email\">\r\n              Email\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"change-password-form__field change-password-form__email-field\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter you email\"\r\n              onChange={onCredentialsChange}\r\n              value={credentials.email}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"change-password-form__field-wrapper\">\r\n            <label className=\"change-password-form__label\" htmlFor=\"oldPassword\">\r\n              Old password\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"change-password-form__field change-password-form__old-password-field\"\r\n              id=\"oldPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Enter you old password\"\r\n              onChange={onCredentialsChange}\r\n              value={credentials.oldPassword}\r\n              required\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"change-password-form__field-wrapper\">\r\n            <label className=\"change-password-form__label\" htmlFor=\"newPassword\">\r\n              New password\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"change-password-form__field change-password-form__new-password-field\"\r\n              id=\"newPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Enter a new password\"\r\n              onChange={onPasswordChange}\r\n              value={password}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* @todo можно реализовать генерацию рандомного пароля\r\n          <button className=\"change-password-form__generate-password\" onClick={onGeneratePassword}>\r\n            Generate password\r\n          </button> */}\r\n        </>\r\n      )}\r\n\r\n      <button className=\"change-password-form__submit-btn\">\r\n        {isFirstModal ? 'Continue' : 'Save'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordModalContent;\r\n","import DeleteAccountModalContent from './delete-account-modal-content';\r\nexport default DeleteAccountModalContent;\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nimport { useTooltipContext } from '../../../../context';\r\nimport RequiredMark from '../../../../components/required-mark';\r\nimport { TooltipTypes } from '../../../../types';\r\nimport './delete-account-modal-content.css';\r\n\r\ninterface ChangeAccountDeleteModalProps {\r\n  onToggleModal: (evt: any) => void;\r\n  user: any;\r\n}\r\ninterface IConfirmCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst ChangeAccountDeleteModalContent: React.FC<ChangeAccountDeleteModalProps> = ({\r\n  onToggleModal,\r\n  user,\r\n}) => {\r\n  const { showTooltip } = useTooltipContext();\r\n  const [credentials, setCredentials] = useState<IConfirmCredentials>({\r\n    email: user.email,\r\n    password: '',\r\n  });\r\n  const [isFirstModal, setIsFirstModal] = useState(true);\r\n\r\n  const onCredentialsChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n\r\n    setCredentials((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onConfirmCredentials = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { email, password } = credentials;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(email, password);\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        setIsFirstModal(false);\r\n      })\r\n      .catch((error: any) => {\r\n        showTooltip(TooltipTypes.Error, `Reauth didn't pass: ${error.message}`);\r\n      });\r\n  };\r\n\r\n  const onDeleteAccount = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    user.delete().catch((err: any) => {\r\n      showTooltip(TooltipTypes.Error, `Your account didn't be deleted: ${err.message}`);\r\n    });\r\n  };\r\n\r\n  const onCancelDeleteAccount = (evt: React.MouseEvent<HTMLButtonElement>): void => {\r\n    onToggleModal(evt);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"delete-account-form\"\r\n      onSubmit={isFirstModal ? onConfirmCredentials : onDeleteAccount}\r\n    >\r\n      {isFirstModal ? (\r\n        <>\r\n          <div className=\"delete-account-form__field-wrapper\">\r\n            <label className=\"delete-account-form__label\" htmlFor=\"email\">\r\n              Email\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"delete-account-form__field delete-account-form__email-field\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter you email\"\r\n              onChange={onCredentialsChange}\r\n              value={credentials.email}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"delete-account-form__field-wrapper\">\r\n            <label className=\"delete-account-form__label\" htmlFor=\"password\">\r\n              Password\r\n              <RequiredMark />:\r\n            </label>\r\n            <input\r\n              className=\"delete-account-form__field delete-account-form__password-field\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter you password\"\r\n              onChange={onCredentialsChange}\r\n              value={credentials.password}\r\n              required\r\n            />\r\n          </div>\r\n          <button className=\"delete-account-form__btn delete-account-form__submit-btn\">\r\n            Continue\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span className=\"delete-account-form__warning-text\">\r\n            Do you want <b>to delete</b> your account <b>forever</b>? This action is irreversibly...\r\n          </span>\r\n          <div className=\"delete-account-form__btn-wrapper\">\r\n            <button\r\n              className=\"delete-account-form__btn delete-account-form__agree-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              className=\"delete-account-form__btn delete-account-form__disagree-btn\"\r\n              type=\"button\"\r\n              onClick={onCancelDeleteAccount}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangeAccountDeleteModalContent;\r\n","export default __webpack_public_path__ + \"static/media/anonymous.a4137231.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/page-title';\r\nimport Portal from '../../components/portal';\r\nimport Modal from '../../components/modal';\r\nimport { useAppContext, useTooltipContext } from '../../context';\r\nimport firebase from 'firebase/app';\r\nimport ChangeEmailModalContent from './components/change-email-modal-content';\r\nimport ChangePasswordModalContent from './components/change-password-modal-content';\r\nimport DeleteAccountModalContent from './components/delete-account-modal-content';\r\nimport { TooltipTypes } from '../../types';\r\nimport './index.css';\r\nimport anonymousImg from '../../assets/img/anonymous.jpg';\r\n\r\n// @todo Рефакторинг компонента + привести к единому виду названия функций, переменных из useState\r\nconst SettingsPage: React.FC = () => {\r\n  const { currentUser, actionCodeSettings } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [name, setName] = useState(currentUser.displayName);\r\n  const [photoUrl, setPhotoUrl] = useState(currentUser.photoURL);\r\n  const [isNameClicked, setIsNameClicked] = useState(false);\r\n  const [isAvatarClicked, setIsAvatarClicked] = useState(false);\r\n  const [showModalEmailChange, setShowModalEmailChange] = useState(false);\r\n  const [showModalPasswordChange, setShowModalPasswordChange] = useState(false);\r\n  const [showModalAccountDelete, setShowModalAccountDelete] = useState(false);\r\n\r\n  const isGoogleUser = currentUser.providerData[0].providerId == 'google.com' ? true : false;\r\n  const email = currentUser.email;\r\n\r\n  //Смена имени\r\n  const onNameClick = (): void => {\r\n    setIsNameClicked(true);\r\n  };\r\n\r\n  const onNameSave = (): void => {\r\n    currentUser\r\n      .updateProfile({\r\n        displayName: name,\r\n      })\r\n      .then(() => setIsNameClicked(false))\r\n      .catch((err: any) => {\r\n        showTooltip(TooltipTypes.Error, `User name didn't update: ${err.message}`);\r\n      });\r\n  };\r\n  const onNameCancel = (): void => {\r\n    setName(currentUser.displayName);\r\n    setIsNameClicked(false);\r\n  };\r\n\r\n  //Смена фото\r\n  const onAvatarClick = (): void => {\r\n    setIsAvatarClicked(true);\r\n  };\r\n  const onPhotoUrlSave = (): void => {\r\n    currentUser\r\n      .updateProfile({\r\n        photoURL: photoUrl,\r\n      })\r\n      .then(() => setIsAvatarClicked(false))\r\n      .catch((err: any) => {\r\n        showTooltip(TooltipTypes.Error, `User avatar didn't update: ${err.message}`);\r\n      });\r\n  };\r\n  const onPhotoUrlCancel = (): void => {\r\n    setPhotoUrl(currentUser.photoURL);\r\n    setIsAvatarClicked(false);\r\n  };\r\n\r\n  // Сброс пароля\r\n  const onEmailForResetPasswordSend = (): void => {\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        showTooltip(TooltipTypes.Info, 'The email to reset your password was send');\r\n      })\r\n      .catch((err) => {\r\n        showTooltip(TooltipTypes.Error, `Email for reset password didn't send ${err.message}`);\r\n      });\r\n  };\r\n\r\n  // @todo Сделать один хендлер с swith case?\r\n  const onNameChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setName(evt.target.value);\r\n  };\r\n  const onPhotoUrlChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setPhotoUrl(evt.target.value);\r\n  };\r\n\r\n  // Тоггл модалок\r\n  const toggleEmailChangeModal = (\r\n    evt:\r\n      | React.FormEvent<HTMLFormElement>\r\n      | React.MouseEvent<HTMLButtonElement>\r\n      | React.FormEvent<HTMLSpanElement>\r\n  ): void => {\r\n    setShowModalEmailChange((prev) => !prev);\r\n  };\r\n\r\n  const togglePasswordChangeModal = (\r\n    evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>\r\n  ): void => {\r\n    setShowModalPasswordChange((prev) => !prev);\r\n  };\r\n\r\n  const toggleAccountDeleteModal = (\r\n    evt: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>\r\n  ): void => {\r\n    setShowModalAccountDelete((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <main className=\"settings-page\">\r\n      <div className=\"container\">\r\n        <PageTitle text=\"Settings\" />\r\n        <h2 className=\"settings-page__subtitle\">Account</h2>\r\n\r\n        <div className=\"settings-wrapper\">\r\n          <div className=\"settings-item settings-item__avatar-wrapper\">\r\n            <img\r\n              className=\"settings-item__avatar\"\r\n              src={photoUrl ? photoUrl : anonymousImg}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"User's avatar\"\r\n            />\r\n\r\n            {isAvatarClicked ? (\r\n              <>\r\n                {/* @todo Стоит сделать ref на инпут, чтобы бахать фокус сразу после его появления? */}\r\n                <input\r\n                  className=\"settings-item__field settings-item__field--avatar\"\r\n                  type=\"text\"\r\n                  name=\"avatar\"\r\n                  onChange={onPhotoUrlChange}\r\n                  placeholder=\"Type the link on your avatar\"\r\n                  value={photoUrl ? photoUrl : ''}\r\n                />\r\n                <button className=\"settings-item__btn\" onClick={onPhotoUrlSave}>\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"settings-item__btn settings-item__btn--cancel\"\r\n                  onClick={onPhotoUrlCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"settings-item__edit-btn settings-item__edit-btn--avatar\"\r\n                onClick={onAvatarClick}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  height=\"24px\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  width=\"24px\"\r\n                  fill=\"#000000\"\r\n                >\r\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                  <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"settings-item\">\r\n            {isNameClicked ? (\r\n              <>\r\n                <input\r\n                  className=\"settings-item__field settings-item__field--name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={onNameChange}\r\n                  placeholder=\"What is your name?\"\r\n                  value={name ? name : ''}\r\n                />\r\n                <button className=\"settings-item__btn\" onClick={onNameSave}>\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"settings-item__btn settings-item__btn--cancel\"\r\n                  onClick={onNameCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"settings-item__text\">\r\n                  <b>Your name: </b>\r\n                  {name ? name : 'Anonymous'}\r\n                </span>\r\n                <button\r\n                  className=\"settings-item__edit-btn settings-item__edit-btn--name\"\r\n                  onClick={onNameClick}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    height=\"18px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"18px\"\r\n                    fill=\"#000000\"\r\n                  >\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\r\n                  </svg>\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"settings-item settings-item--email\">\r\n            <span className=\"settings-item__text\">\r\n              <b>Your email: </b>\r\n              {email}\r\n            </span>\r\n\r\n            {isGoogleUser ? undefined : (\r\n              <button\r\n                className=\"settings-item__edit-btn settings-item__edit-btn--email\"\r\n                onClick={toggleEmailChangeModal}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  height=\"18px\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  width=\"18px\"\r\n                  fill=\"#000000\"\r\n                >\r\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                  <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {!isGoogleUser && (\r\n            <>\r\n              <div className=\"settings-item\">\r\n                <span>If you remember your password, you can</span>\r\n                <button className=\"settings-item__btn\" onClick={togglePasswordChangeModal}>\r\n                  Change it\r\n                </button>\r\n              </div>\r\n              <div className=\"settings-item\">\r\n                <span>\r\n                  But if you forgot it, we can send the email to you to reset the password\r\n                </span>\r\n                <button className=\"settings-item__btn\" onClick={onEmailForResetPasswordSend}>\r\n                  Send the email\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className=\"settings-item\">\r\n            <button\r\n              className=\"settings-item__btn settings-item__btn--cancel settings-item__btn--delete-account\"\r\n              onClick={toggleAccountDeleteModal}\r\n            >\r\n              Delete account\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <h2 className=\"settings-page__subtitle\">App</h2>\r\n        {/* @todo Здесь будет тогглер цветовой схемы сайта */}\r\n\r\n        {showModalEmailChange && (\r\n          <Portal>\r\n            <Modal\r\n              classes=\"modal--change-email\"\r\n              title=\"Changing the email\"\r\n              onCloseBtnClick={toggleEmailChangeModal}\r\n            >\r\n              <ChangeEmailModalContent\r\n                onToggleModal={toggleEmailChangeModal}\r\n                user={currentUser}\r\n                actionCodeSettings={actionCodeSettings}\r\n              />\r\n            </Modal>\r\n          </Portal>\r\n        )}\r\n        {showModalPasswordChange && (\r\n          <Portal>\r\n            <Modal\r\n              classes=\"modal--change-password\"\r\n              title=\"Changing the password\"\r\n              onCloseBtnClick={togglePasswordChangeModal}\r\n            >\r\n              <ChangePasswordModalContent\r\n                onToggleModal={togglePasswordChangeModal}\r\n                user={currentUser}\r\n              />\r\n            </Modal>\r\n          </Portal>\r\n        )}\r\n        {showModalAccountDelete && (\r\n          <Portal>\r\n            <Modal\r\n              classes=\"modal--delete-account\"\r\n              title=\"Deleting the account\"\r\n              onCloseBtnClick={toggleAccountDeleteModal}\r\n            >\r\n              <DeleteAccountModalContent\r\n                user={currentUser}\r\n                onToggleModal={toggleAccountDeleteModal}\r\n              />\r\n            </Modal>\r\n          </Portal>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import SignUpModalContent from './sign-up-modal-content';\r\nexport default SignUpModalContent;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTooltipContext } from '../../../../context';\r\nimport firebase from 'firebase/app';\r\nimport { TooltipTypes } from '../../../../types';\r\n\r\nimport './sign-up-modal-content.css';\r\n\r\ninterface ISignUpModalContentState {\r\n  email: string;\r\n  password: string;\r\n  repeatPassword: string;\r\n}\r\n\r\nconst SignUpModalContent: React.FC = () => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [state, setState] = useState<ISignUpModalContentState>({\r\n    email: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n  });\r\n\r\n  const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n\r\n    const { email, password, repeatPassword } = state;\r\n    if (password == repeatPassword) {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => localStorage.setItem('rememberMe', 'true'))\r\n        .catch((err) =>\r\n          showTooltip(TooltipTypes.Error, `Your account didn't be created: ${err.message}`)\r\n        );\r\n    } else {\r\n      showTooltip(TooltipTypes.Error, \"You password and repeated password don't match\");\r\n    }\r\n  };\r\n\r\n  const googleSignUp = (): void => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(() => localStorage.setItem('rememberMe', 'true'))\r\n      .catch((error) => {\r\n        showTooltip(TooltipTypes.Error, error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"sign-up-form\" onSubmit={onSubmit}>\r\n        <div className=\"sign-up-form__field-wrapper\">\r\n          <label className=\"sign-up-form__label\" htmlFor=\"email\">\r\n            Email<sup className=\"sign-up-form__label-required\">*</sup>:\r\n          </label>\r\n          <input\r\n            className=\"sign-up-form__field\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            onChange={onChange}\r\n            value={state.email}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"sign-up-form__field-wrapper\">\r\n          <label className=\"sign-up-form__label\" htmlFor=\"password\">\r\n            Password<sup className=\"sign-up-form__label-required\">*</sup>:\r\n          </label>\r\n          <input\r\n            className=\"sign-up-form__field\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Create a password\"\r\n            onChange={onChange}\r\n            value={state.password}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"sign-up-form__field-wrapper\">\r\n          <label className=\"sign-up-form__label\" htmlFor=\"repeatPassword\">\r\n            Repeat password<sup className=\"sign-up-form__label-required\">*</sup>:\r\n          </label>\r\n          <input\r\n            className=\"sign-up-form__field\"\r\n            id=\"repeatPassword\"\r\n            type=\"password\"\r\n            name=\"repeat-password\"\r\n            placeholder=\"Repeat a password\"\r\n            onChange={onChange}\r\n            value={state.repeatPassword}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button className=\"sign-up-form__submit-btn\">Sign up</button>\r\n      </form>\r\n      <div className=\"modal--sign-up__sign-up-with-google\">\r\n        <span className=\"sign-up-with-google__text\">Also you can</span>\r\n        <button className=\"sign-up-with-google__btn\" onClick={googleSignUp}>\r\n          Sign up with\r\n        </button>\r\n      </div>\r\n\r\n      <span className=\"modal--sign-up__go-to-sign-in\">\r\n        Already have an account?{' '}\r\n        <Link className=\"modal--sign-up__sign-in-link\" to=\"/sign-in\">\r\n          Sign in\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpModalContent;\r\n","import React from 'react';\r\nimport Modal from '../../components/modal';\r\nimport SignUpModalContent from './components/sign-up-modal-content';\r\n\r\nconst SignUpPage: React.FC = () => (\r\n  <main className=\"sign-up-page\">\r\n    <Modal classes=\"modal--sign-up\" title=\"Sign up\">\r\n      <SignUpModalContent />\r\n    </Modal>\r\n  </main>\r\n);\r\n\r\nexport default SignUpPage;\r\n","import SignInModalContent from './sign-in-modal-content';\r\nexport default SignInModalContent;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport { useTooltipContext } from '../../../../context';\r\nimport { TooltipTypes } from '../../../../types';\r\nimport './sign-in-modal-content.css';\r\n\r\ninterface ISignInModalContentState {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignInModalContent: React.FC = () => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [state, setState] = useState<ISignInModalContentState>({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [isRememberMeChecked, setIsRememberMeChecked] = useState(\r\n    localStorage.getItem('rememberMe')\r\n  );\r\n\r\n  const onChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const id: string = evt.target.id;\r\n    const value: string = evt.target.value;\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [id]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onRememberMeToggle = (evt: React.ChangeEvent<HTMLInputElement>): void => {\r\n    if (isRememberMeChecked) {\r\n      localStorage.removeItem('rememberMe');\r\n      setIsRememberMeChecked(null);\r\n    } else {\r\n      localStorage.setItem('rememberMe', 'true');\r\n      setIsRememberMeChecked('true');\r\n    }\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    const { email, password } = state;\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => showTooltip(TooltipTypes.Error, err.message));\r\n  };\r\n  const googleSignIn = (): void => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .catch((error) => {\r\n        showTooltip(TooltipTypes.Error, error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"sign-in-form\" onSubmit={onSubmit}>\r\n        <div className=\"sign-in-form__field-wrapper\">\r\n          <label className=\"sign-in-form__label\" htmlFor=\"email\">\r\n            Email<sup className=\"sign-in-form__label-required\">*</sup>:\r\n          </label>\r\n          <input\r\n            className=\"sign-in-form__field\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            onChange={onChange}\r\n            value={state.email}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"sign-in-form__field-wrapper\">\r\n          <label className=\"sign-in-form__label\" htmlFor=\"password\">\r\n            Password<sup className=\"sign-in-form__label-required\">*</sup>:\r\n          </label>\r\n          <input\r\n            className=\"sign-in-form__field\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={onChange}\r\n            value={state.password}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"sign-in-form__field-wrapper sign-in-form__field-wrapper--checkbox\">\r\n          <label className=\"sign-in-form__label\" htmlFor=\"rememberMe\">\r\n            Remember me:\r\n          </label>\r\n          <input\r\n            className=\"sign-in-form__field sign-in-form__field--checkbox\"\r\n            id=\"rememberMe\"\r\n            type=\"checkbox\"\r\n            name=\"remember-me\"\r\n            onChange={onRememberMeToggle}\r\n            checked={isRememberMeChecked ? true : false}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"sign-in-form__submit-btn\">Sign in</button>\r\n      </form>\r\n\r\n      <button className=\"modal--sign-in__google-btn\" onClick={googleSignIn}>\r\n        Sign in with\r\n      </button>\r\n\r\n      <span className=\"modal--sign-in__go-to-reset\">\r\n        Forgot password?{' '}\r\n        <Link className=\"modal--sign-in__link\" to=\"/reset-password\">\r\n          Reset\r\n        </Link>\r\n      </span>\r\n      <span className=\"modal--sign-in__go-to-sign-up\">\r\n        Back to{' '}\r\n        <Link className=\"modal--sign-in__link\" to=\"/sign-up\">\r\n          Sign up\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInModalContent;\r\n","import React from 'react';\r\nimport Modal from '../../components/modal';\r\nimport SignInModalContent from './components/sign-in-modal-content';\r\n\r\nconst SignInPage: React.FC = () => (\r\n  <main className=\"sign-in-page\">\r\n    <Modal classes=\"modal--sign-in\" title=\"Sign in\">\r\n      <SignInModalContent />\r\n    </Modal>\r\n  </main>\r\n);\r\n\r\nexport default SignInPage;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport { useAppContext, useTooltipContext } from '../../../context/';\r\nimport { TooltipTypes } from '../../../types';\r\nimport './reset-password-modal-content.css';\r\n\r\nconst ResetPasswordModalContent: React.FC = () => {\r\n  const { actionCodeSettings } = useAppContext();\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @todo Должна быть валидация\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>): void => {\r\n    evt.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        showTooltip(TooltipTypes.Info, 'The email to reset your password was send');\r\n      })\r\n      .catch((err) => {\r\n        showTooltip(TooltipTypes.Error, err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"reset-password-form\" onSubmit={onSubmit}>\r\n        <div className=\"reset-password-form__field-wrapper\">\r\n          <label className=\"reset-password-form__label\" htmlFor=\"email\">\r\n            Email<sup className=\"reset-password-form__label-required\">*</sup>:\r\n          </label>\r\n          <input\r\n            className=\"reset-password-form__field\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            onChange={onChange}\r\n            value={email}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"reset-password-form__submit-btn\">Reset password</button>\r\n      </form>\r\n\r\n      <Link className=\"modal--reset-password__sign-in-link\" to=\"/sign-in\">\r\n        I remember :)\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordModalContent;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from '../../components/modal';\r\nimport ResetPasswordModalContent from './components/reset-password-modal-content';\r\n\r\nconst ResetPasswordPage: React.FC = () => (\r\n  <main className=\"reset-password-page\">\r\n    <Modal classes=\"modal--reset-password\" title=\"Reset password\">\r\n      <ResetPasswordModalContent />\r\n    </Modal>\r\n  </main>\r\n);\r\n\r\nexport default ResetPasswordPage;\r\n","import Header from \"./header\";\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useTooltipContext } from '../../context';\r\nimport { signOut } from '../../helpers';\r\n\r\nimport './header.css';\r\n\r\nconst Header: React.FC = () => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  return (\r\n    <header className=\"page-header\">\r\n      <div className=\"container flex-wrapper\">\r\n        <nav className=\"main-nav\">\r\n          <NavLink exact to=\"/\" className=\"main-nav__link\" activeClassName=\"main-nav__active-link\">\r\n            Doit!\r\n          </NavLink>\r\n          <ul className=\"main-nav__list\">\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/todo\"\r\n                className=\"main-nav__link\"\r\n                activeClassName=\"main-nav__active-link\"\r\n              >\r\n                Todo\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/notes\"\r\n                className=\"main-nav__link\"\r\n                activeClassName=\"main-nav__active-link\"\r\n              >\r\n                Notes\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"main-nav__item\">\r\n              <NavLink\r\n                to=\"/settings\"\r\n                className=\"main-nav__link\"\r\n                activeClassName=\"main-nav__active-link\"\r\n              >\r\n                Settings\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <button className=\"page-header__sign-out-btn\" onClick={() => signOut(showTooltip)}>\r\n          Sign out\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useTooltipContext } from '../../context';\r\nimport { signOut } from '../../helpers';\r\n\r\nimport './emailUnverifiedOverlay.css';\r\n\r\nconst EmailUnverifiedOverlay = () => {\r\n  const { showTooltip } = useTooltipContext();\r\n\r\n  return (\r\n    <div className=\"app-overlay\">\r\n      <div className=\"app-overlay__content\">\r\n        Please confirm your email to use the app or{' '}\r\n        <button className=\"app-overlay__sign-out-btn\" onClick={() => signOut(showTooltip)}>\r\n          Sign out\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailUnverifiedOverlay;\r\n","import Tooltip from './tooltip';\r\nexport default Tooltip;\r\n","import React, { useEffect } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\nimport { useTooltipContext } from '../../context';\r\nimport './tooltip.css';\r\n\r\nconst Tooltip: React.FC = () => {\r\n  const { message, type, isOpen, hideTooltip } = useTooltipContext();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      let timerId = setTimeout(hideTooltip, 10000);\r\n      return () => {\r\n        clearTimeout(timerId);\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Transition in={isOpen} timeout={300} unmountOnExit>\r\n      {(transitionState: string) => (\r\n        <div className={`tooltip ${transitionState} tooltip--${type}`}>\r\n          <span className=\"tooltip__message\">{message}</span>\r\n          <button className=\"tooltip__close\" onClick={() => hideTooltip()}></button>\r\n        </div>\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\nexport default Tooltip;\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom';\r\nimport {\r\n  MainPage,\r\n  TodosPage,\r\n  NotesPage,\r\n  SettingsPage,\r\n  SignUpPage,\r\n  SignInPage,\r\n  ResetPasswordPage,\r\n} from '../pages';\r\nimport { useAppContext } from '../context';\r\nimport Header from '../components/header';\r\nimport EmailUnverifiedOverlay from '../components/emailUnverifiedOverlay';\r\nimport Tooltip from '../components/tooltip';\r\n\r\nimport '../assets/css/normalize.css';\r\nimport './scaffolding.css';\r\n\r\nconst App: React.FC = () => {\r\n  const { isLoggedIn, currentUser } = useAppContext();\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedIn ? (\r\n        <>\r\n          {currentUser.emailVerified ? (\r\n            <>\r\n              <Route path=\"/sign-in\" render={() => <Redirect to=\"/\" />} />\r\n              <Route path=\"/sign-up\" render={() => <Redirect to=\"/\" />} />\r\n              <Header />\r\n              <Tooltip />\r\n              <Route path=\"/\" component={MainPage} exact />\r\n              <Route path=\"/todo\" component={TodosPage} />\r\n              <Route path=\"/notes\" component={NotesPage} />\r\n              <Route path=\"/settings\" component={SettingsPage} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/sign-in\" render={() => <Redirect to=\"/\" />} />\r\n              <Route path=\"/sign-up\" render={() => <Redirect to=\"/\" />} />\r\n              <Header />\r\n              <Tooltip />\r\n              <EmailUnverifiedOverlay />\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Tooltip />\r\n          <Route path=\"/sign-up\" component={SignUpPage} />\r\n          <Route path=\"/sign-in\" component={SignInPage} />\r\n          <Route path=\"/reset-password\" component={ResetPasswordPage} />\r\n          {/* @todo Использовать switch из react-router-dom*/}\r\n          {/* <Route path=\"*\" render={() => <Redirect to=\"/sign-up\" />} /> */}\r\n          <Redirect to=\"/sign-up\" />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\nimport { AppProvider, TooltipProvider } from './context';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\ninterface IFirebaseConfig {\r\n  apiKey: string;\r\n  authDomain: string;\r\n  databaseURL: string;\r\n  projectId: string;\r\n  storageBucket: string;\r\n  messagingSenderId: string;\r\n  appId: string;\r\n}\r\n\r\nconst firebaseConfig: IFirebaseConfig = {\r\n  apiKey: 'AIzaSyD4KDh3FaOBTHDF_oleVT06eUTvbDCStNY',\r\n  authDomain: 'todo-1c323.firebaseapp.com',\r\n  databaseURL: 'https://todo-1c323-default-rtdb.firebaseio.com',\r\n  projectId: 'todo-1c323',\r\n  storageBucket: 'todo-1c323.appspot.com',\r\n  messagingSenderId: '372839437605',\r\n  appId: '1:372839437605:web:31ef34b6e882e585f576cc',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <TooltipProvider>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </TooltipProvider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}